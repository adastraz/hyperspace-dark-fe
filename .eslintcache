[{"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Selector.js":"1","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\App.js":"2","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\EsportsGear.js":"3","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\LoadComments.js":"4","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\index.js":"5","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\SignIn.js":"6","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth.js":"7","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\Posts.js":"8","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Sidebar.js":"9","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\ListLikes.js":"10","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Item.js":"11","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Header.js":"12","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Player.js":"13","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Checkoutshop.js":"14","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\RL.js":"15","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Welcome.js":"16","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Store.js":"17","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Valorant.js":"18","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\reducers\\index.js":"19","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Footer.js":"20","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\actions\\index.js":"21","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth2.js":"22","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\history.js":"23"},{"size":1716,"mtime":1612805065464,"results":"24","hashOfConfig":"25"},{"size":1605,"mtime":1612805452572,"results":"26","hashOfConfig":"25"},{"size":262,"mtime":1611793678720,"results":"27","hashOfConfig":"25"},{"size":9330,"mtime":1612811449195,"results":"28","hashOfConfig":"25"},{"size":672,"mtime":1610991415320,"results":"29","hashOfConfig":"25"},{"size":7371,"mtime":1612806809478,"results":"30","hashOfConfig":"25"},{"size":379,"mtime":1610990355463,"results":"31","hashOfConfig":"25"},{"size":6232,"mtime":1612811849274,"results":"32","hashOfConfig":"25"},{"size":4990,"mtime":1612807335803,"results":"33","hashOfConfig":"25"},{"size":2385,"mtime":1612807244481,"results":"34","hashOfConfig":"25"},{"size":6825,"mtime":1612282942532,"results":"35","hashOfConfig":"25"},{"size":2299,"mtime":1611174382070,"results":"36","hashOfConfig":"25"},{"size":18208,"mtime":1613149751133,"results":"37","hashOfConfig":"25"},{"size":983,"mtime":1610389479449,"results":"38","hashOfConfig":"25"},{"size":1209,"mtime":1612807415439,"results":"39","hashOfConfig":"25"},{"size":479,"mtime":1612807358587,"results":"40","hashOfConfig":"25"},{"size":657,"mtime":1609893933490,"results":"41","hashOfConfig":"25"},{"size":1557,"mtime":1612816796190,"results":"42","hashOfConfig":"25"},{"size":3025,"mtime":1612294973578,"results":"43","hashOfConfig":"25"},{"size":955,"mtime":1611177413863,"results":"44","hashOfConfig":"25"},{"size":15563,"mtime":1613149868004,"results":"45","hashOfConfig":"25"},{"size":270,"mtime":1612804510912,"results":"46","hashOfConfig":"25"},{"size":97,"mtime":1606931257997,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yk8obo",{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Selector.js",["107","108"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\App.js",["109","110","111","112"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\EsportsGear.js",["113","114","115"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport history from '../../utils/history'\r\n\r\nconst EsportsGear = () => {\r\n\r\n    return (\r\n        <>\r\n            <h1>Store</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EsportsGear","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\LoadComments.js",["116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, \r\n    Modal, \r\n    ModalHeader, \r\n    ModalBody, \r\n    ModalFooter,\r\n    DropdownItem\r\n} from 'reactstrap'\r\nimport { \r\n    addLike, \r\n    removeLike,\r\n    addLike1, \r\n    removeLike1,\r\n    deletePost,\r\n    addComment,\r\n    addComment1,\r\n    removeComment,\r\n    removeComment1\r\n} from '../../actions'\r\nimport { connect } from 'react-redux'\r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport Close from '../../styles/imgs/close.svg'\r\nimport Delete from '../../styles/imgs/delete.svg'\r\nimport Check from '../../styles/imgs/check.svg'\r\nimport ListLikes from './ListLikes'\r\n\r\nconst LoadComments = props => {\r\n    const [current, setCurrent] = useState({})\r\n    const [comments, setComments] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [modald, setModald] = useState(false)\r\n    const toggled = () => setModald(!modald)\r\n    const toggle = () => setModal(!modal)\r\n    const likedPostId = []\r\n\r\n    const [newComment, setNewComment] = useState({\r\n        comment: ''\r\n    })\r\n\r\n    // const followerNum = []\r\n\r\n    // props.following.forEach(follow => {\r\n    //     followerNum.push(follow.username)\r\n    // })\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get(`/api/posts/${props.post.id}/post`)\r\n                .then(res => {\r\n                    setCurrent(res.data)\r\n                    axiosWithAuth2()\r\n                        .get(`/api/comments/${props.post.id}/post`)\r\n                            .then(success => setComments(success.data))\r\n                            .catch(err => console.log(err))\r\n                })\r\n                .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    props.userLikes.forEach(likedposts => {\r\n        likedPostId.push(likedposts.post_id)\r\n    })\r\n\r\n    const handleChanges = e => {\r\n        setNewComment({\r\n            ...newComment,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitComment = e => {\r\n        e.preventDefault()\r\n        props.addComment1({ comment: newComment.comment, comment_username: localStorage.getItem('name'), user_id: localStorage.getItem('cred') }, current.id)\r\n        setComments([\r\n            ...comments, { comment: newComment.comment, comment_username: localStorage.getItem('name'), id: Date.now(), user_id: localStorage.getItem('cred'), is_player: props.user.is_player }])\r\n        setNewComment({ comment: '' })\r\n        setCurrent({ ...current, comment_number: current.comment_number+1 })\r\n    }\r\n\r\n    const removeCommentHelper = comment_id => {\r\n        props.removeComment1(comment_id, current.id)\r\n        const newarr = comments.filter(comm => comment_id !== comm.id)\r\n        setComments(newarr)\r\n        setCurrent({ ...current, comment_number: current.comment_number-1 })\r\n    }\r\n\r\n    const addLikeHelper = post_id => {\r\n        props.addLike1(localStorage.getItem('name'), localStorage.getItem('cred'), post_id)\r\n        likedPostId.push(post_id)\r\n        setCurrent({ ...current, like_number: current.like_number+1 })\r\n    }\r\n\r\n    const removeLikeHelper = post_id => {\r\n        props.removeLike1(localStorage.getItem('name'), localStorage.getItem('cred'), post_id)\r\n        likedPostId.filter(like => post_id !== like)\r\n        setCurrent({ ...current, like_number: current.like_number-1 })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.sidebar ?\r\n                <Button id='sidelc' onClick={toggle}>\r\n                    <p className='showpost code'>{props.post.post}</p>\r\n                    {props.post.img != '' ?\r\n                        <img className='postimage2' src={props.post.img} /> : ''\r\n                    }\r\n                </Button> :\r\n                <Button color=\"danger\" onClick={toggle}>Load Comments... [{current.comment_number}]</Button>\r\n            }\r\n            \r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <div key={current.id} className='explore'>\r\n                    <ModalHeader>\r\n                        <p>{props.username}</p>\r\n                        <p>{current.post}</p>\r\n                        <p>{current.location}</p>\r\n                        <p>{current.created_at}</p>\r\n                        {current.img != '' ? \r\n                            <img src={current.img} className='postimage'/> :\r\n                            ''\r\n                        }\r\n                        <ListLikes post={current} />\r\n                        {current.user_id == localStorage.getItem('cred') ?\r\n                            <>\r\n                                <DropdownItem onClick={toggled}><img src={Delete} /></DropdownItem>\r\n                                <Modal isOpen={modald} toggle={toggled}>\r\n                                    <ModalHeader toggle={toggled}>Are you sure?</ModalHeader>\r\n                                    <ModalBody>\r\n                                        <DropdownItem color='danger' onClick={() => props.deletePost(localStorage.getItem('cred'), {postid: current.id})}><img src={Check} /></DropdownItem>\r\n                                        <DropdownItem color='primary' onClick={toggled}><img src={Close} /></DropdownItem>\r\n                                    </ModalBody>\r\n                                </Modal>\r\n                            </> :\r\n                            ''\r\n                        }\r\n                        {!likedPostId.includes(current.id) ? \r\n                            <a className='like' onClick={() => addLikeHelper(current.id)}>Like</a> :\r\n                            <a className='unlike' onClick={() => removeLikeHelper(current.id)}>Unlike</a>\r\n                        }\r\n\r\n                    </ModalHeader>\r\n                        <ModalBody>\r\n                            {comments.map(comment => (\r\n                                <>\r\n                                    {/* {followerNum.includes(comment.comment_username) ? \r\n                                        <div key={comment.id}>\r\n                                            <Link\r\n                                            to={`/friend/${comment.user_id}`}>\r\n                                                {comment.comment_username}\r\n                                            </Link>\r\n                                            <p>{comment.comment}</p>\r\n                                        </div> :*/}\r\n                                    {comment.is_player ?\r\n                                        <div key={comment.id} className='comment'>\r\n                                            <Link\r\n                                                to={`/player/${comment.comment_username}`}\r\n                                            >\r\n                                                <p id='playerusername'>{comment.comment_username}</p>\r\n                                            </Link>\r\n                                            <p>{comment.comment}</p>\r\n                                            {comment.comment_username === props.user.username ? \r\n                                                <img src={Close} onClick={() => removeCommentHelper(comment.id)} /> :\r\n                                                ''\r\n                                            }\r\n                                        </div> :\r\n                                        <div className='comment' key={comment.id}>\r\n                                            <p id='username'>{comment.comment_username}</p>\r\n                                            <p>{comment.comment}</p>\r\n                                            {comment.comment_username === props.user.username ? \r\n                                                <img src={Close} onClick={() => removeCommentHelper(comment.id)} /> :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            ))}\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <form onSubmit={submitComment}>\r\n                                <textarea\r\n                                    className='commentcomment'\r\n                                    id='comment'\r\n                                    name='comment'\r\n                                    value={newComment.comment}\r\n                                    placeholder='Comment on post'\r\n                                    onChange={handleChanges}\r\n                                />\r\n                                <button type='submit'>Post Comment</button>\r\n                            </form>\r\n                        </ModalFooter>\r\n                    </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // following: state.following,\r\n        // users: state.users,\r\n        posts: state.posts,\r\n        userLikes: state.userLikes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, removeLike1, addLike1, addComment, addComment1, removeComment, removeComment1, deletePost })(LoadComments)",["129","130"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\SignIn.js",["131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login, register, clearError, fetchUserLikes } from '../../actions'\r\nimport Loader from 'react-loader-spinner'\r\nimport Posts from './Posts.js'\r\n\r\nconst SignIn = props => {\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const [confirm, setConfirm] = useState({\r\n        password: ''\r\n    })\r\n    const [signup, setSignup] = useState(false)\r\n    const [length, setLength] = useState(false)\r\n    const [number, setNumber] = useState(false)\r\n    const [special, setSpecial] = useState(false)\r\n    const [letter, setLetter] = useState(false)\r\n    const [actLen, setActLen] = useState(0)\r\n    const [unmatching, setUnmatching] = useState(true)\r\n\r\n    const numbers = ['1','2','3','4','5','6','7','8','9']\r\n    const specialCharacters = ['[','#','?','!','@','$','%','^','&','-',']']\r\n    const letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n    const handleChanges = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChangesconfirm = e => {\r\n        setConfirm({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault()\r\n\r\n        signup ? props.login(user) : props.register(user)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (actLen > user.password.length && number == true || special == true) {\r\n            setNumber(false)\r\n            setSpecial(false)\r\n            setLetter(false)\r\n        } \r\n        setActLen(user.password.length)\r\n\r\n        if (user.password.length > 7) {\r\n            setLength(true)\r\n        } else {\r\n            setLength(false)\r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (letters.includes(user.password[i])) {\r\n                setLetter(true)\r\n            } else if (((i+1) == user.password.length) && letter == false){\r\n                setLetter(false)\r\n            } \r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (numbers.includes(user.password[i])) {\r\n                setNumber(true)\r\n            } else if (((i+1) == user.password.length) && number == false){\r\n                setNumber(false)\r\n            } \r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (specialCharacters.includes(user.password[i])) {\r\n                setSpecial(true)\r\n            } else if (((i+1) == user.password.length) && special == false){\r\n                setSpecial(false)\r\n            } \r\n        }\r\n        if (signup && user.password == confirm.password) {\r\n            setUnmatching(true)\r\n        } else{\r\n            setUnmatching(false)\r\n        }\r\n    }, [user.password, confirm.password])\r\n\r\n    return (\r\n        <>\r\n            {localStorage.getItem('token') == null ?\r\n                <div className='signDiv'>\r\n                    <form onSubmit={submitForm}>\r\n                        <input \r\n                            className='signin'\r\n                            id='username'\r\n                            type='text'\r\n                            name='username'\r\n                            onChange={handleChanges}\r\n                            value={user.username}\r\n                            placeholder='Username'\r\n                        />\r\n                        <input \r\n                            className='signin'\r\n                            id='password'\r\n                            type='password'\r\n                            name='password'\r\n                            onChange={handleChanges}\r\n                            value={user.password}\r\n                            placeholder='Password'\r\n                        />\r\n                        {signup ?\r\n                            <button type='submit' className='login'>Login</button> :\r\n                            <>\r\n                                <input \r\n                                    className='signin'\r\n                                    id='password'\r\n                                    type='password'\r\n                                    name='password'\r\n                                    onChange={handleChangesconfirm}\r\n                                    value={confirm.password}\r\n                                    placeholder='Confirm Password'\r\n                                />\r\n                                {unmatching && length && number && special && letter ?\r\n                                    <button type='submit'>Sign Up</button> :\r\n                                    <a className='red'>Requirements not met</a>\r\n                                }\r\n                            </> \r\n                        }\r\n                        {length ?\r\n                            <p className='green'>Meets length requirement (8 char+)</p> : \r\n                            <p className='red'>Must be longer than 8 characters</p>\r\n                        }\r\n                        {number ?\r\n                            <p className='green'>Has at least 1 number</p> : \r\n                            <p className='red'>Must have at least one number</p>\r\n                        }\r\n                        {special ?\r\n                            <p className='green'>Has at least 1 special character</p> : \r\n                            <p className='red'>Must have at least one special character [#?!@$%^&-]</p>\r\n                        }\r\n                        {letter ?\r\n                            <p className='green'>Has at least 1 letter</p> : \r\n                            <p className='red'>Must have at least one letter</p>\r\n                        }\r\n                        {!signup ?\r\n                            unmatching ?\r\n                                <p className='green'>passwords match</p> : \r\n                                <p className='red'>passwords do not match</p> :\r\n                            ''\r\n                        }\r\n                        {props.error != null ? \r\n                            !signup ?\r\n                                <p className='red'>Username may be taken</p> :\r\n                                <p className='red'>Username or Password may be incorrect</p>\r\n                            :\r\n                            ''\r\n                        }\r\n                    </form>\r\n                    {signup ? \r\n                        <p id='nav' className='nav'onClick={() => setSignup(!signup)}>Create Account</p> :\r\n                        <p id='nav' className='nav' onClick={() => setSignup(!signup)}>Already have an Account</p>\r\n                    }\r\n                    {\r\n                        props.isLoading ? \r\n                        <Loader type='Bars' /> :\r\n                        ''\r\n                    }\r\n                </div> :\r\n                <Posts />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // friends: state.friends,\r\n        // users: state.users,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, register, clearError, fetchUserLikes })(SignIn)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth.js",[],["144","145"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\Posts.js",["146","147","148","149"],"import React, { useState, useEffect } from 'react' \r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchUserLikes, clearError, fetchUser, postPost, deletePost } from '../../actions'\r\nimport LoadComments from './LoadComments.js'\r\nimport { connect } from 'react-redux'\r\nimport ListLikes from './ListLikes.js'\r\n\r\nconst Posts = props => {\r\n    const [allposts, setAllposts] = useState([])\r\n    const [postpost, setPostpost] = useState(false)\r\n    const [newPost, setNewPost] = useState({\r\n        post: '',\r\n        location: '',\r\n        img: ''\r\n    })\r\n    var d = new Date\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get('/api/posts')\r\n                .then(res => {\r\n                    setAllposts(res.data)\r\n                    console.log('------TYLER LENGTH HERE------', res.data.length)\r\n                })\r\n                .catch(err => {\r\n                    localStorage.removeItem('token')\r\n                    localStorage.removeItem('cred')\r\n                    localStorage.removeItem('name')\r\n                    props.clearError()\r\n                })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null){\r\n            props.fetchUser(localStorage.getItem('cred'))\r\n            props.fetchUserLikes(localStorage.getItem('cred'))\r\n        }\r\n    }, [])\r\n\r\n    const handleChanges = e => {\r\n        setNewPost({\r\n            ...newPost,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n//year month day hour minute\r\n    const submitForm = e => {\r\n        e.preventDefault()\r\n        props.postPost(props.user.id, {...newPost, user_id: props.user.id})\r\n        setAllposts([\r\n            { post: newPost.post, id: allposts.length+1, created_at: `${d.getFullYear()}-${d.getMonth()}-${d.getDate()}T${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}.${d.getMilliseconds()}Z`, username: props.user.username, is_player: props.user.is_player }, ...allposts\r\n        ])\r\n        setNewPost({ post: ''})\r\n        setPostpost(false)\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('cred')\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('name')\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img src=\"https://img.icons8.com/dusk/64/000000/exit.png\" className='logoutbutton' onClick={() => logout()}/>\r\n            {props.user.is_player ? \r\n                <p onClick={() => setPostpost(!postpost)}>Post</p> :\r\n                ''\r\n            }\r\n            {postpost ? \r\n                <form onSubmit={submitForm} className='postform'>\r\n                    <textarea\r\n                        id='post'\r\n                        name='post'\r\n                        value={newPost.post}\r\n                        placeholder=\"What's on your mind?\"\r\n                        onChange={handleChanges}\r\n                        className='postpost'\r\n                    />\r\n                    {/* {!location ? \r\n                        <p onClick={() => setLocation(!img)}>Location</p> :\r\n                        <>\r\n                            <input\r\n                                className='locationlocation'\r\n                                id='location'\r\n                                type='text'\r\n                                name='location'\r\n                                value={newPost.location}\r\n                                placeholder='Location'\r\n                                onChange={handleChanges}\r\n                            />\r\n                            <button onClick={() => setLocation(!location)}>Cancel</button>\r\n                        </>\r\n                    }\r\n                    \r\n                    {!img ? \r\n                        <p onClick={() => setImg(!img)}>Image</p> :\r\n                        <>\r\n                            <input\r\n                                className='locationlocation'\r\n                                id='img'\r\n                                type='text'\r\n                                name='img'\r\n                                value={newPost.img}\r\n                                placeholder='Image link'\r\n                                onChange={handleChanges}\r\n                            />\r\n                            {newPost.img != '' ?\r\n                                <>\r\n                                    <img src={newPost.img} className='postimage' />\r\n                                </> :\r\n                                ''\r\n                            }\r\n                            <button onClick={() => setImg(!img)}>Cancel</button>\r\n                        </>\r\n                    } */}\r\n                    <button type='submit'>Post</button>\r\n                </form> :\r\n                ''\r\n            }\r\n            {allposts.map(post => (\r\n                <div className='sidebarflex' key={post.id}>\r\n                    <div className='postssidebar'>\r\n                        {post.is_player ?\r\n                            <Link to={`/player/${post.username}`} className='postlink'>\r\n                                <p className='playerusername code'>{post.username}</p>\r\n                                <p className='date code'>{post.created_at}</p>\r\n                            </Link> :\r\n                            <div className='postlink'>\r\n                                <p className='username code'>{post.username}</p>\r\n                                <p className='date code'>{post.created_at}</p>\r\n                            </div>\r\n                        }\r\n                        \r\n                        <LoadComments post={post} sidebar={true} username={post.username}/>\r\n                        <ListLikes post={post} /> \r\n                    </div>\r\n                </div> \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // friends: state.friends,\r\n        // users: state.users,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchUserLikes, clearError, fetchUser, postPost, deletePost })(Posts)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Sidebar.js",["150","151","152","153","154","155","156","157","158","159","160"],"import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { getStreamers } from '../../actions'\r\nimport axiosWithAuth from '../../utils/axiosWithAuth'\r\nimport SignIn from '../social/SignIn.js'\r\nimport Selector from './Selector.js'\r\n\r\nconst Sidebar = props => {\r\n    const location = useLocation()\r\n    const [schedule, setSchedule] = useState([])\r\n    const [twitch, setTwitch] = useState([])\r\n    const [schedDis, setSchedDis] = useState(true)\r\n    const [twitchDis, setTwitchDis] = useState(false)\r\n    const streamers = ['squallowl', 'zundga', 'apaq', 'pjtryhard', 'itshafu', 'shroud', 'xqcow', 'pokimane', 'hiko', 'emongg', 'tover0']\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === '/valorant') {\r\n            axios.get('http://localhost:3300/api/schedule/valorant/game')\r\n                .then(res => setSchedule(res.data))\r\n                .catch(err => console.log(err))\r\n        }else if(location.pathname === '/rl') {\r\n            axios.get('http://localhost:3300/api/schedule/rl/game')\r\n                .then(res => setSchedule(res.data))\r\n                .catch(err => console.log(err))\r\n        } else{\r\n            axios.get('http://localhost:3300/api/schedule')\r\n                .then(res => setSchedule(res.data))\r\n                .catch(err => console.log(err))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //action to get streamers\r\n        // props.live.forEach(ele => ele[0] ? console.log(ele[0].user_name, 'yes') : console.log(ele[0], 'no'))\r\n        axios.get('/auth/api/current_user')\r\n            .then(res => {\r\n                console.log(res)\r\n                localStorage.setItem('twitchaccess', res.data.accessToken)\r\n                localStorage.setItem('twitchID', res.data.user.twitchID)\r\n            })\r\n        props.getStreamers(streamers)\r\n    }, [])\r\n\r\n    const redirectFunc = link => {\r\n        const win = window.open(link, '_blank')\r\n        win.focus()\r\n    }\r\n\r\n    // const getTwitch = () => {\r\n    //     axios.get('https://twitch-auth-0.herokuapp.com/auth/twitch')\r\n    // }\r\n\r\n    return (\r\n        <>  \r\n            <div className='sidebarcontainer'>\r\n                {localStorage.getItem('side') == 'Schedule' ? \r\n                    <>\r\n                        <Selector title='Schedule'/>\r\n                        {schedule.map(ele => (\r\n                            <div className='games'>  \r\n                                <div className='sideflex2'>\r\n                                    <p className='schedule'>{ele.opp_team}</p>\r\n                                    <p className='schedule'>VS.</p>\r\n                                    <p className='schedule'>Hyperspace Dark</p>\r\n                                </div>\r\n                                <div className='sideflex2'>\r\n                                    <p className='schedule'>{ele.opp_team_score}</p>\r\n                                    <p className='schedule'>-</p>\r\n                                    <p className='schedule'>{ele.hd_score}</p>\r\n                                </div>\r\n                                <div className='datetime'>\r\n                                    <p className='schedule'>{ele.date}</p>\r\n                                    <p className='schedule'>{ele.time}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))} \r\n                    </>:\r\n                    localStorage.getItem('side') == 'Now-Live' ? \r\n                    <>\r\n                        <Selector title='Now-Live'/>\r\n                        <a href='/auth/twitch'>Twitch</a>\r\n                        {props.live.length > 0 ? props.live.map(ele => (\r\n                            <div className='games' key={ele[0].user_name} onClick={() => redirectFunc(`https://www.twitch.tv/${ele[0].user_name}`)}>\r\n                                <p>{ele[0].user_name}</p>\r\n                                <div className='sideflex2'>\r\n                                    <p>viewer count</p> \r\n                                    <p>{ele[0].viewer_count}</p>\r\n                                    <p>game name</p>\r\n                                    <p>{ele[0].game_name}</p>\r\n                                </div>\r\n                                <p>title</p>\r\n                                <p>{ele[0].title}</p>\r\n                            </div> \r\n                        )): <h1>No one is live</h1>}\r\n                    </> :\r\n                    <>\r\n                        <Selector title='Social'/>\r\n                        <SignIn />\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        // live: state.live,\r\n        side: state.side\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getStreamers })(Sidebar)\r\n","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\ListLikes.js",["161","162"],"import React, { useState, useEffect } from 'react'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport { } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst ListLikes = props => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n    const [likes, setLikes] = useState([])\r\n    const toggle = () => setDropdownOpen(prevState => !prevState)\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get(`/api/likes/${props.post.id}/post`)\r\n                .then(res => {\r\n                    setLikes(res.data)\r\n                })\r\n    },[])\r\n\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} id='listlikes'>\r\n            <DropdownToggle id='listlikes' className='listlikes2 code'>\r\n                Likes: {props.post.like_number}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n                <DropdownItem header>Likes</DropdownItem>\r\n                <DropdownItem divider />\r\n                {likes.map(user => (\r\n                    <>\r\n                        {user.like_username == localStorage.getItem('name') ?\r\n                            <Link \r\n                                to={`/profile/${props.user.id}`}\r\n                                key={user.id}\r\n                                className='likename'>\r\n                                    {user.like_username}\r\n                            </Link> :\r\n                            <div classname='likeflex'>\r\n                                <Link\r\n                                    to={`/user/${user.user_id}`}\r\n                                    key={user.id}\r\n                                    className='likename'>\r\n                                        {user.like_username}\r\n                                </Link>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                ))}\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        posts: state.posts\r\n        // users: state.users,\r\n        // following: state.following,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { })(ListLikes)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Item.js",["163","164","165","166","167","168","169","170","171","172"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Header.js",["173","174","175","176","177","178"],"import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport Logo from '../styles/imgs/Hyperspace_logo-HD.png'\r\nimport Valorant from '../styles/imgs/valorant-logo.png'\r\nimport RL from '../styles/imgs/rl-logo.png'\r\nimport Helmet from '../styles/imgs/Hyperspace_logo-Helmet-2.png'\r\nimport { connect } from 'react-redux'\r\nimport history from '../utils/history'\r\n\r\nconst Header = props => {\r\n    const [dis, setDis] = useState(false)\r\n    const [dis2, setDis2] = useState(false)\r\n    const location = useLocation()\r\n\r\n    const redirect = () => {\r\n        history.push('/store')\r\n        window.location.reload()\r\n    }\r\n    return (\r\n        <div className='header'>\r\n            <div className='title'>\r\n                <Link to='/'>\r\n                    <img className='mainlogo' src={Logo} />\r\n                </Link>\r\n                <Link to='/' className='hd'>\r\n                    <h1 className='hd'>Hyperspace Dark</h1>\r\n                </Link>\r\n            </div>\r\n            <div className='discord'>\r\n                <a href='https://discord.gg/dXUFew7Gvn' target=\"_blank\">\r\n                    <img src={Helmet} className='helmet' />\r\n                </a>\r\n                <p className='msgdisc'>Join our discord!</p>\r\n            </div>\r\n            <div className='gamelogo'>\r\n                <Link \r\n                    to='/valorant' className='nav' onMouseOver={() => setDis(!dis)}\r\n                    onMouseOut={() => setDis(!dis)}>\r\n                        <img src={Valorant} className='logo' />\r\n                        {/* <h3 className={!dis ? 'hidden' : 'yes'}>Players</h3> */}\r\n                </Link>\r\n                <Link \r\n                    to='/rl' className='nav' onMouseOver={() => setDis2(!dis2)}\r\n                    onMouseOut={() => setDis2(!dis2)}>\r\n                        <img src={RL} className='logo rllogo' />\r\n                        {/* <h3 className={!dis2 ? 'hidden' : 'yes'}>Players</h3> */}\r\n                </Link>\r\n                <button onClick={() => redirect()}>Store</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Header)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Player.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport Twitch from '../styles/imgs/icons8-twitch-64.png'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { addAgent, deleteAgent, addYtlink, deleteYtlink, addCreator, deleteCreator, addOthergame, deleteOthergame } from '../actions'\r\n\r\nimport Raze from '../styles/imgs/raze.png'\r\nimport Yoru from '../styles/imgs/yoru.png'\r\nimport Cypher from '../styles/imgs/cypher.png'\r\nimport Viper from '../styles/imgs/viper.png'\r\nimport Breach from '../styles/imgs/breach.png'\r\nimport Pheonix from '../styles/imgs/pheonix.png'\r\nimport Jett from '../styles/imgs/jett.png'\r\nimport Reyna from '../styles/imgs/reyna.png'\r\nimport Sova from '../styles/imgs/sova.png'\r\nimport Killjoy from '../styles/imgs/killjoy.png'\r\nimport Omen from '../styles/imgs/omen.PNG'\r\nimport Sage from '../styles/imgs/sage.png'\r\nimport Skye from '../styles/imgs/skye.png'\r\nimport Brimstone from '../styles/imgs/brimstone.png'\r\n\r\nimport Dia1 from '../styles/imgs/dia2.png'\r\nimport Dia2 from '../styles/imgs/dia2.png'\r\nimport Dia3 from '../styles/imgs/dia3.png'\r\nimport Imm1 from '../styles/imgs/imm1.png'\r\nimport Imm2 from '../styles/imgs/imm2.png'\r\nimport Imm3 from '../styles/imgs/imm3.png'\r\nimport Rad from '../styles/imgs/radiant.png'\r\n\r\nconst Player = props => {\r\n    const location = useLocation()\r\n    const { name } = useParams()\r\n    const [player, setPlayer] = useState({})\r\n    const [details, setDetails] = useState({})\r\n    const [agents, setAgents] = useState([])\r\n    const [creators, setCreators] = useState([])\r\n    const [othergames, setOthergames] = useState([])\r\n    const [ytlinks, setYtlinks] = useState([])\r\n\r\n    const [ytformdis, setYtformdis] = useState(false)\r\n    const [ytform, setYtform] = useState({ youtubelinks: '' })\r\n    const [agentformdis, setAgentformdis] = useState(false)\r\n    const [agentform, setAgentform] = useState({ agent_name: '' })\r\n    const [othergameformdis, setOthergameformdis] = useState(false)\r\n    const [othergameform, setOthergameform] = useState({ name: '', img_link: '' })\r\n    const [creatorformdis, setCreatorformdis] = useState(false)\r\n    const [creatorform, setCreatorform] = useState({ name: '', img: '' })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://hdsocial.herokuapp.com/api/viewuser/${name}/username`)\r\n            .then(res => {\r\n                setPlayer(res.data[0])\r\n                if (res.data[0].game === 'valorant') {\r\n                    axios.get(`https://hdsocial.herokuapp.com/api/viewuser/${res.data[0].id}/details/valorant`)\r\n                        .then(res2 => {\r\n                            setDetails(res2.data.user_details)\r\n                            setAgents(res2.data.user_agents)\r\n                            setCreators(res2.data.user_creators)\r\n                            setOthergames(res2.data.user_othergames)\r\n                            setYtlinks(res2.data.user_ytlinks)\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     console.log({\r\n    //         details: details,\r\n    //         creators: creators,\r\n    //         player: player,\r\n    //         othergames: othergames,\r\n    //         ytlinks: ytlinks,\r\n    //         agents: agents\r\n    //     })\r\n    // }, [])\r\n\r\n    const redirectFunc = link => {\r\n        const win = window.open(link, '_blank')\r\n        win.focus()\r\n    }\r\n\r\n    const handleChangesyt = e => {\r\n        setYtform({\r\n            ...ytform,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitYt = e => {\r\n        e.preventDefault()\r\n        setYtlinks([...ytlinks, { ...ytform, id: ytlinks.length+1 } ])\r\n        props.addYtlink({ ...ytform, user_id: props.user.id }, props.user.id)\r\n        setYtform({ youtubelinks: '' })\r\n        setYtformdis(false)\r\n        // console.log(ytlinks)\r\n    }\r\n\r\n    const handleChangesagent = e => {\r\n        setAgentform({\r\n            ...agentform,\r\n            [e.target.name]: e.target.value.toLowerCase()\r\n        })\r\n        console.log(agentform)\r\n    }\r\n\r\n    const submitAgent = e => {\r\n        e.preventDefault()\r\n        setAgents([...agents, { ...agentform, id: agents.length+1 } ])\r\n        props.addAgent({ ...agentform, user_id: props.user.id }, props.user.id)\r\n        setAgentform({ agent_name: '' })\r\n        setAgentformdis(false)\r\n        console.log(agents)\r\n    }\r\n\r\n    const handleChangesothergame = e => {\r\n        setOthergameform({\r\n            ...othergameform,\r\n            [e.target.name]: e.target.value.toLowerCase()\r\n        })\r\n        console.log(othergameform)\r\n    }\r\n\r\n    const submitOthergame = e => {\r\n        e.preventDefault()\r\n        setOthergames([...othergames, { ...othergameform, id: othergames.length+1 } ])\r\n        props.addOthergame({ ...othergameform, user_id: props.user.id }, props.user.id)\r\n        setOthergameform({ name: '', img_link: '' })\r\n        setOthergameformdis(false)\r\n        console.log(othergames)\r\n    }\r\n\r\n    const handleChangescreator = e => {\r\n        setCreatorform({\r\n            ...creatorform,\r\n            [e.target.name]: e.target.value.toLowerCase()\r\n        })\r\n        console.log(creatorform)\r\n    }\r\n\r\n    const submitCreator = e => {\r\n        e.preventDefault()\r\n        setCreators([...creators, { ...creatorform, id: creators.length+1 }])\r\n        props.addCreator({ ...creatorform, user_id: props.user.id }, props.user.id)\r\n        setCreatorform({ name: '', img: '' })\r\n        setCreatorformdis(false)\r\n        console.log(creators)\r\n    }\r\n\r\n    const deleteDetail = (type, id) => {\r\n        if (type === 'youtube') {\r\n            console.log('youtube')\r\n        } else if (type === 'agent') {\r\n            const newarr = agents.filter(agent => id !== agent.id)\r\n            props.deleteAgent(id)\r\n            setAgents(newarr)\r\n        } else if (type === 'othergame') {\r\n            const newarr = othergames.filter(othergame => id !== othergame.id)\r\n            props.deleteOthergame(id)\r\n            setOthergames(newarr)\r\n        } else {\r\n            const newarr = creators.filter(creator => id !== creator.id)\r\n            props.deleteCreator(id)\r\n            setCreators(newarr)\r\n        }\r\n    }\r\n\r\n    // const ytarr = ['https://www.youtube.com/embed/Uqnu9EAoSwA', 'https://www.youtube.com/embed/tPoWuqFEYXs']\r\n\r\n    const [ytplay, setYtplay] = useState(0)\r\n\r\n    return (\r\n        <div className='playercont'>\r\n            <div className='playerhead'>\r\n                <h1 className='spiffy'>{player.username}</h1>\r\n                {details ? \r\n                    <>\r\n                        {details.twitch_link !== null ?\r\n                            <img src={Twitch} className='twitch' onClick={() => redirectFunc(details.twitch_link)} /> :\r\n                            ''\r\n                        }\r\n                        {details.youtube_link !== null ?\r\n                            <img className='youtube' onClick={() => redirectFunc(details.youtube_link)} src=\"https://img.icons8.com/dusk/64/000000/youtube--v2.png\"/> :\r\n                            ''\r\n                        }\r\n                        {details.rank === 'dia1' ?\r\n                            <img src={Dia1} className='twitch' alt={`rank ${details.rank}`} /> :\r\n                        details.rank === 'dia2' ?\r\n                            <img src={Dia2} className='twitch' alt={`rank ${details.rank}`} /> :\r\n                        details.rank === 'dia3' ?\r\n                            <img src={Dia3} className='twitch' alt={`rank ${details.rank}`} /> :\r\n                        details.rank === 'imm1' ?\r\n                            <img src={Imm1} className='twitch' alt={`rank ${details.rank}`} /> :\r\n                        details.rank === 'imm2' ?\r\n                            <img src={Imm2} className='twitch' alt={`rank ${details.rank}`} /> :\r\n                        details.rank === 'imm3' ?\r\n                            <img src={Imm3} className='twitch' alt={`rank ${details.rank}`} /> : \r\n                            <img src={Rad} className='twitch' alt={`rank ${details.rank}`} />                      \r\n                        }\r\n                    </> :\r\n                    <p>No details to display :/</p>\r\n                }\r\n            </div>\r\n            <div className='sideflex2'>\r\n                {ytlinks.length > 0 ? \r\n                    <>\r\n                        <iframe width=\"500\" height=\"250\" className='video'\r\n                            src={`${ytlinks[ytplay].youtubelinks}?autoplay=1&mute=1&loop=1`}>\r\n                        </iframe>\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => deleteDetail('youtube', ytlinks[ytplay].id)}>delete</button> :\r\n                            ''\r\n                        }\r\n                    </> : \r\n                    <p>No vidoes listed</p>\r\n                }\r\n                {props.user.username === name ?\r\n                    <button onClick={() => setYtformdis(!ytformdis)}>Add youtube links</button> :\r\n                    ''\r\n                }\r\n                {ytformdis ?\r\n                    <form onSubmit={submitYt}>\r\n                        <input  \r\n                            type='text'\r\n                            id='youtubelinks'\r\n                            name='youtubelinks'\r\n                            onChange={handleChangesyt}\r\n                            placeholder='Embedded youtube link'\r\n                        />\r\n                        <button type='submit'>send</button>\r\n                    </form> : \r\n                    ''\r\n                }\r\n                {/* <iframe width=\"420\" height=\"250\" className='video'\r\n                    src={`${ytarr[ytplay]}?autoplay=1&mute=1&loop=1`}>\r\n                </iframe> */}\r\n                {/* <button onClick={() => changeVid('+')}>+</button>\r\n                <button onClick={() => changeVid('-')}>-</button> */}\r\n                <div>\r\n                    <div>\r\n                        <h1>Agents</h1>\r\n                        {agents.length > 0 ? \r\n                            agents.map(agent => (\r\n                                <>\r\n                                    {agent.agent_name === 'raze' ?\r\n                                        <img src={Raze} className='agents'/> :\r\n                                    agent.agent_name === 'omen' ?\r\n                                        <img src={Omen} className='agents' /> :\r\n                                    agent.agent_name === 'brimstone' ?\r\n                                        <img src={Brimstone} className='agents' /> :\r\n                                    agent.agent_name === 'breach' ?\r\n                                        <img src={Breach} className='agents' /> :\r\n                                    agent.agent_name === 'viper' ?\r\n                                        <img src={Viper} className='agents' /> :\r\n                                    agent.agent_name === 'killjoy' ?\r\n                                        <img src={Killjoy} className='agents' /> :\r\n                                    agent.agent_name === 'cypher' ?\r\n                                        <img src={Cypher} className='agents' /> :\r\n                                    agent.agent_name === 'yoru' ?\r\n                                        <img src={Yoru} className='agents' /> :\r\n                                    agent.agent_name === 'sova' ?\r\n                                        <img src={Sova} className='agents' /> :\r\n                                    agent.agent_name === 'reyna' ?\r\n                                        <img src={Reyna} className='agents' /> :\r\n                                    agent.agent_name === 'pheonix' ?\r\n                                        <img src={Pheonix} className='agents' /> :\r\n                                    agent.agent_name === 'jett' ?\r\n                                        <img src={Jett} className='agents' /> :\r\n                                    agent.agent_name === 'sage' ? \r\n                                        <img src={Sage} className='agents' /> :\r\n                                        <img src={Skye} className='agents' /> \r\n                                    }\r\n                                    {props.user.username === name ?\r\n                                        <button onClick={() => deleteDetail('agent', agent.id)}>delete</button> :\r\n                                        ''\r\n                                    }\r\n                                </>\r\n                            )) : \r\n                        <p>No agents listed</p>\r\n                        }\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => setAgentformdis(!agentformdis)}>Add agents</button> :\r\n                            ''\r\n                        }\r\n                        {agentformdis ?\r\n                            <form onSubmit={submitAgent}>\r\n                                <input  \r\n                                    type='text'\r\n                                    id='agent_name'\r\n                                    name='agent_name'\r\n                                    onChange={handleChangesagent}\r\n                                    placeholder='Agent name'\r\n                                />\r\n                                <button type='submit'>send</button>\r\n                            </form> : \r\n                            ''\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <h1>Other Games</h1>\r\n                        {othergames.length > 0 ? \r\n                            othergames.map(game => (\r\n                                <>\r\n                                    <img src={game.img_link} className='agents' />\r\n                                    <p>{game.name}</p>\r\n                                    {props.user.username === name ?\r\n                                        <button onClick={() => deleteDetail('othergame', game.id)}>delete</button> :\r\n                                        ''\r\n                                    }\r\n                                </>\r\n                            )) :\r\n                            <p>No games listed</p>\r\n                        }\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => setOthergameformdis(!othergameformdis)}>Add games</button> :\r\n                            ''\r\n                        }\r\n                        {othergameformdis ?\r\n                            <form onSubmit={submitOthergame}>\r\n                                <input  \r\n                                    type='text'\r\n                                    id='name'\r\n                                    name='name'\r\n                                    onChange={handleChangesothergame}\r\n                                    placeholder='Game name'\r\n                                />\r\n                                <input  \r\n                                    type='text'\r\n                                    id='img_link'\r\n                                    name='img_link'\r\n                                    onChange={handleChangesothergame}\r\n                                    placeholder='Img address link (logo)'\r\n                                />\r\n                                <button type='submit'>send</button>\r\n                            </form> : \r\n                            ''\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <h1>Favorite Content Creators</h1>\r\n                        {creators.length > 0 ?\r\n                            creators.map(creator => (\r\n                                <div onClick={() => redirectFunc(creator.link)}>\r\n                                    <p>{creator.name}</p>\r\n                                    <img src={creator.img} />\r\n                                    {props.user.username === name ?\r\n                                        <button onClick={() => deleteDetail('creator', creator.id)}>delete</button> :\r\n                                        ''\r\n                                    }\r\n                                </div>\r\n                            )) :\r\n                            <p> No favorite creators listed</p>\r\n                        }\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => setCreatorformdis(!creatorformdis)}>Add creators</button> :\r\n                            ''\r\n                        }\r\n                        {creatorformdis ?\r\n                            <form onSubmit={submitCreator}>\r\n                                <input  \r\n                                    type='text'\r\n                                    id='name'\r\n                                    name='name'\r\n                                    onChange={handleChangescreator}\r\n                                    placeholder='Creator name'\r\n                                />\r\n                                <input  \r\n                                    type='text'\r\n                                    id='img'\r\n                                    name='img'\r\n                                    onChange={handleChangescreator}\r\n                                    placeholder='Img address link (profile img)'\r\n                                />\r\n                                <button type='submit'>send</button>\r\n                            </form> : \r\n                            ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // friends: state.friends,\r\n        // users: state.users,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addAgent, deleteAgent, addYtlink, deleteYtlink, addCreator, deleteCreator, addOthergame, deleteOthergame })(Player)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Checkoutshop.js",["201","202"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Checkoutshop = props => {\r\n    return (\r\n        <div className='storediv'>\r\n            {props.cart.map(item => (\r\n                <div key={Date.now()} className='players'>\r\n                    <h1>{item.item.name}</h1>\r\n                    <p>{item.item.price}</p>\r\n                    <p>{item.size}</p>\r\n                    {item.username && item.player_name ? \r\n                    <>\r\n                        <p>{item.username}</p>\r\n                        <p>{item.player_name}</p>\r\n                    </> : ''\r\n                    }\r\n                </div>\r\n            ))}\r\n            <h1>${props.bal}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        cart: state.cart,\r\n        bal: state.bal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Checkoutshop)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\RL.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Welcome.js",[],["203","204"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\Store.js",["205"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Store = () => {\r\n    const [shopitems, setShopitems] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:2400/api/shop')\r\n            .then(res => setShopitems(res.data))\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {shopitems.map(item => (\r\n                <div>\r\n                    <Link to={`/store/${item.id}`}><img src={item.img} className='store' /></Link>\r\n                    <p>{item.price}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Valorant.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\reducers\\index.js",["206","207"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Footer.js",["208"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\actions\\index.js",["209"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth2.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\history.js",[],{"ruleId":"210","severity":1,"message":"211","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"215","line":21,"column":39,"nodeType":"216","messageId":"217","endLine":21,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":21,"column":27,"nodeType":"216","messageId":"217","endLine":21,"endColumn":29},{"ruleId":"214","severity":1,"message":"218","line":23,"column":34,"nodeType":"216","messageId":"217","endLine":23,"endColumn":36},{"ruleId":"214","severity":1,"message":"215","line":23,"column":57,"nodeType":"216","messageId":"217","endLine":23,"endColumn":59},{"ruleId":"219","severity":1,"message":"220","line":26,"column":6,"nodeType":"221","endLine":26,"endColumn":25,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"223","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":17},{"ruleId":"210","severity":1,"message":"224","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":15},{"ruleId":"219","severity":1,"message":"225","line":58,"column":8,"nodeType":"221","endLine":58,"endColumn":10,"suggestions":"226"},{"ruleId":"214","severity":1,"message":"218","line":104,"column":37,"nodeType":"216","messageId":"217","endLine":104,"endColumn":39},{"ruleId":"227","severity":1,"message":"228","line":105,"column":25,"nodeType":"229","endLine":105,"endColumn":76},{"ruleId":"214","severity":1,"message":"218","line":118,"column":38,"nodeType":"216","messageId":"217","endLine":118,"endColumn":40},{"ruleId":"227","severity":1,"message":"228","line":119,"column":29,"nodeType":"229","endLine":119,"endColumn":75},{"ruleId":"214","severity":1,"message":"215","line":123,"column":42,"nodeType":"216","messageId":"217","endLine":123,"endColumn":44},{"ruleId":"227","severity":1,"message":"228","line":125,"column":65,"nodeType":"229","endLine":125,"endColumn":85},{"ruleId":"227","severity":1,"message":"228","line":129,"column":155,"nodeType":"229","endLine":129,"endColumn":174},{"ruleId":"227","severity":1,"message":"228","line":130,"column":89,"nodeType":"229","endLine":130,"endColumn":108},{"ruleId":"230","severity":1,"message":"231","line":137,"column":29,"nodeType":"229","endLine":137,"endColumn":91},{"ruleId":"230","severity":1,"message":"231","line":138,"column":29,"nodeType":"229","endLine":138,"endColumn":96},{"ruleId":"227","severity":1,"message":"228","line":162,"column":49,"nodeType":"229","endLine":162,"endColumn":116},{"ruleId":"227","severity":1,"message":"228","line":170,"column":49,"nodeType":"229","endLine":170,"endColumn":116},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":49,"column":43,"nodeType":"238","messageId":"239","endLine":49,"endColumn":45},{"ruleId":"214","severity":1,"message":"215","line":49,"column":53,"nodeType":"216","messageId":"217","endLine":49,"endColumn":55},{"ruleId":"236","severity":1,"message":"237","line":49,"column":61,"nodeType":"238","messageId":"239","endLine":49,"endColumn":63},{"ruleId":"214","severity":1,"message":"215","line":49,"column":72,"nodeType":"216","messageId":"217","endLine":49,"endColumn":74},{"ruleId":"214","severity":1,"message":"215","line":65,"column":31,"nodeType":"216","messageId":"217","endLine":65,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":65,"column":66,"nodeType":"216","messageId":"217","endLine":65,"endColumn":68},{"ruleId":"214","severity":1,"message":"215","line":73,"column":31,"nodeType":"216","messageId":"217","endLine":73,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":73,"column":66,"nodeType":"216","messageId":"217","endLine":73,"endColumn":68},{"ruleId":"214","severity":1,"message":"215","line":81,"column":31,"nodeType":"216","messageId":"217","endLine":81,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":81,"column":67,"nodeType":"216","messageId":"217","endLine":81,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":85,"column":37,"nodeType":"216","messageId":"217","endLine":85,"endColumn":39},{"ruleId":"219","severity":1,"message":"240","line":90,"column":8,"nodeType":"221","endLine":90,"endColumn":41,"suggestions":"241"},{"ruleId":"230","severity":1,"message":"231","line":129,"column":37,"nodeType":"229","endLine":129,"endColumn":56},{"ruleId":"232","replacedBy":"242"},{"ruleId":"234","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":17,"column":13,"nodeType":"246","messageId":"247","endLine":17,"endColumn":21,"fix":"248"},{"ruleId":"219","severity":1,"message":"249","line":32,"column":8,"nodeType":"221","endLine":32,"endColumn":10,"suggestions":"250"},{"ruleId":"219","severity":1,"message":"249","line":39,"column":8,"nodeType":"221","endLine":39,"endColumn":10,"suggestions":"251"},{"ruleId":"227","severity":1,"message":"228","line":67,"column":13,"nodeType":"229","endLine":67,"endColumn":122},{"ruleId":"210","severity":1,"message":"252","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":21},{"ruleId":"210","severity":1,"message":"253","line":13,"column":12,"nodeType":"212","messageId":"213","endLine":13,"endColumn":18},{"ruleId":"210","severity":1,"message":"254","line":13,"column":20,"nodeType":"212","messageId":"213","endLine":13,"endColumn":29},{"ruleId":"210","severity":1,"message":"255","line":14,"column":12,"nodeType":"212","messageId":"213","endLine":14,"endColumn":20},{"ruleId":"210","severity":1,"message":"256","line":14,"column":22,"nodeType":"212","messageId":"213","endLine":14,"endColumn":33},{"ruleId":"210","severity":1,"message":"257","line":15,"column":12,"nodeType":"212","messageId":"213","endLine":15,"endColumn":21},{"ruleId":"210","severity":1,"message":"258","line":15,"column":23,"nodeType":"212","messageId":"213","endLine":15,"endColumn":35},{"ruleId":"219","severity":1,"message":"259","line":32,"column":8,"nodeType":"221","endLine":32,"endColumn":10,"suggestions":"260"},{"ruleId":"219","severity":1,"message":"261","line":44,"column":8,"nodeType":"221","endLine":44,"endColumn":10,"suggestions":"262"},{"ruleId":"214","severity":1,"message":"215","line":58,"column":47,"nodeType":"216","messageId":"217","endLine":58,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":80,"column":50,"nodeType":"216","messageId":"217","endLine":80,"endColumn":52},{"ruleId":"219","severity":1,"message":"225","line":19,"column":7,"nodeType":"221","endLine":19,"endColumn":9,"suggestions":"263"},{"ruleId":"214","severity":1,"message":"215","line":31,"column":45,"nodeType":"216","messageId":"217","endLine":31,"endColumn":47},{"ruleId":"214","severity":1,"message":"215","line":25,"column":35,"nodeType":"216","messageId":"217","endLine":25,"endColumn":37},{"ruleId":"214","severity":1,"message":"215","line":27,"column":42,"nodeType":"216","messageId":"217","endLine":27,"endColumn":44},{"ruleId":"219","severity":1,"message":"264","line":31,"column":8,"nodeType":"221","endLine":31,"endColumn":10,"suggestions":"265"},{"ruleId":"219","severity":1,"message":"266","line":71,"column":8,"nodeType":"221","endLine":71,"endColumn":14,"suggestions":"267"},{"ruleId":"219","severity":1,"message":"268","line":75,"column":8,"nodeType":"221","endLine":75,"endColumn":15,"suggestions":"269"},{"ruleId":"214","severity":1,"message":"215","line":78,"column":23,"nodeType":"216","messageId":"217","endLine":78,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":80,"column":30,"nodeType":"216","messageId":"217","endLine":80,"endColumn":32},{"ruleId":"214","severity":1,"message":"215","line":103,"column":49,"nodeType":"216","messageId":"217","endLine":103,"endColumn":51},{"ruleId":"214","severity":1,"message":"215","line":108,"column":28,"nodeType":"216","messageId":"217","endLine":108,"endColumn":30},{"ruleId":"214","severity":1,"message":"215","line":143,"column":29,"nodeType":"216","messageId":"217","endLine":143,"endColumn":31},{"ruleId":"210","severity":1,"message":"270","line":13,"column":11,"nodeType":"212","messageId":"213","endLine":13,"endColumn":19},{"ruleId":"227","severity":1,"message":"228","line":23,"column":21,"nodeType":"229","endLine":23,"endColumn":60},{"ruleId":"271","severity":1,"message":"272","line":30,"column":57,"nodeType":"273","endLine":30,"endColumn":72},{"ruleId":"227","severity":1,"message":"228","line":31,"column":21,"nodeType":"229","endLine":31,"endColumn":60},{"ruleId":"227","severity":1,"message":"228","line":39,"column":25,"nodeType":"229","endLine":39,"endColumn":64},{"ruleId":"227","severity":1,"message":"228","line":45,"column":25,"nodeType":"229","endLine":45,"endColumn":65},{"ruleId":"210","severity":1,"message":"270","line":32,"column":11,"nodeType":"212","messageId":"213","endLine":32,"endColumn":19},{"ruleId":"219","severity":1,"message":"274","line":65,"column":8,"nodeType":"221","endLine":65,"endColumn":10,"suggestions":"275"},{"ruleId":"210","severity":1,"message":"276","line":170,"column":20,"nodeType":"212","messageId":"213","endLine":170,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":179,"column":29,"nodeType":"229","endLine":179,"endColumn":118},{"ruleId":"227","severity":1,"message":"228","line":183,"column":29,"nodeType":"229","endLine":183,"endColumn":166},{"ruleId":"277","severity":1,"message":"278","line":207,"column":25,"nodeType":"229","endLine":208,"endColumn":94},{"ruleId":"227","severity":1,"message":"228","line":246,"column":41,"nodeType":"229","endLine":246,"endColumn":77},{"ruleId":"227","severity":1,"message":"228","line":248,"column":41,"nodeType":"229","endLine":248,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":250,"column":41,"nodeType":"229","endLine":250,"endColumn":83},{"ruleId":"227","severity":1,"message":"228","line":252,"column":41,"nodeType":"229","endLine":252,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":254,"column":41,"nodeType":"229","endLine":254,"endColumn":79},{"ruleId":"227","severity":1,"message":"228","line":256,"column":41,"nodeType":"229","endLine":256,"endColumn":81},{"ruleId":"227","severity":1,"message":"228","line":258,"column":41,"nodeType":"229","endLine":258,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":260,"column":41,"nodeType":"229","endLine":260,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":262,"column":41,"nodeType":"229","endLine":262,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":264,"column":41,"nodeType":"229","endLine":264,"endColumn":79},{"ruleId":"227","severity":1,"message":"228","line":266,"column":41,"nodeType":"229","endLine":266,"endColumn":81},{"ruleId":"227","severity":1,"message":"228","line":268,"column":41,"nodeType":"229","endLine":268,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":270,"column":41,"nodeType":"229","endLine":270,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":271,"column":41,"nodeType":"229","endLine":271,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":304,"column":37,"nodeType":"229","endLine":304,"endColumn":83},{"ruleId":"227","severity":1,"message":"228","line":345,"column":37,"nodeType":"229","endLine":345,"endColumn":62},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"279","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"232","replacedBy":"280"},{"ruleId":"234","replacedBy":"281"},{"ruleId":"227","severity":1,"message":"228","line":16,"column":52,"nodeType":"229","endLine":16,"endColumn":92},{"ruleId":"214","severity":1,"message":"215","line":61,"column":35,"nodeType":"216","messageId":"217","endLine":61,"endColumn":37},{"ruleId":"282","severity":1,"message":"283","line":93,"column":9,"nodeType":"284","messageId":"217","endLine":97,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":8,"column":17,"nodeType":"229","endLine":8,"endColumn":57},{"ruleId":"210","severity":1,"message":"224","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":15},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.","ArrayExpression",["285"],"'connect' is defined but never used.","'history' is defined but never used.","React Hook useEffect has a missing dependency: 'props.post.id'. Either include it or remove the dependency array.",["286"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'actLen', 'letter', 'letters', 'number', 'numbers', 'signup', 'special', and 'specialCharacters'. Either include them or remove the dependency array.",["289"],["287"],["288"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"290","text":"291"},"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["292"],["293"],"'axiosWithAuth' is defined but never used.","'twitch' is assigned a value but never used.","'setTwitch' is assigned a value but never used.","'schedDis' is assigned a value but never used.","'setSchedDis' is assigned a value but never used.","'twitchDis' is assigned a value but never used.","'setTwitchDis' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'props' and 'streamers'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["295"],["296"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'item.name'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setitem(i => ...)' if you only need 'item' in the 'setitem' call.",["299"],"'location' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["300"],"'setYtplay' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useState' is defined but never used.",["287"],["288"],"no-duplicate-case","Duplicate case label.","SwitchCase",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"no-global-assign","no-unsafe-negation",{"desc":"305","fix":"306"},[633,633],"()",{"desc":"307","fix":"308"},{"desc":"307","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"303","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [display, location.pathname]",{"range":"323","text":"324"},"Update the dependencies array to be: [props.post.id]",{"range":"325","text":"326"},"Update the dependencies array to be: [user.password, confirm.password, actLen, number, special, signup, letters, letter, numbers, specialCharacters]",{"range":"327","text":"328"},"Update the dependencies array to be: [props]",{"range":"329","text":"330"},{"range":"331","text":"330"},"Update the dependencies array to be: [location.pathname]",{"range":"332","text":"333"},"Update the dependencies array to be: [props, streamers]",{"range":"334","text":"335"},{"range":"336","text":"326"},"Update the dependencies array to be: [id]",{"range":"337","text":"338"},"Update the dependencies array to be: [item.name, size]",{"range":"339","text":"340"},"Update the dependencies array to be: [item, price]",{"range":"341","text":"342"},"Update the dependencies array to be: [name]",{"range":"343","text":"344"},[936,955],"[display, location.pathname]",[1754,1756],"[props.post.id]",[2875,2908],"[user.password, confirm.password, actLen, number, special, signup, letters, letter, numbers, specialCharacters]",[1156,1158],"[props]",[1381,1383],[1423,1425],"[location.pathname]",[1920,1922],"[props, streamers]",[712,714],[1121,1123],"[id]",[2492,2498],"[item.name, size]",[2575,2582],"[item, price]",[3050,3052],"[name]"]