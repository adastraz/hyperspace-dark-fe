[{"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\index.js":"1","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Tournament.js":"2","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\SignIn.js":"3","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\actions\\index.js":"4","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\index.js":"5","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Header\\index.js":"6","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Welcome\\index.js":"7","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Players\\index.js":"8","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Sidebar\\index.js":"9","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Details.js":"10","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\App.js":"11","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth.js":"12","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Selector.js":"13","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\LoadComments.js":"14","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\ListLikes.js":"15","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Store\\index.js":"16","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Header.js":"17","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\App\\index.js":"18","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth2.js":"19","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Welcome.js":"20","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\Posts.js":"21","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Social\\index.js":"22","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Player.js":"23","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\About\\index.js":"24","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\About.js":"25","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\EsportsGear.js":"26","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\reducers\\index.js":"27","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\RL.js":"28"},{"size":672,"mtime":1623253106176,"results":"29","hashOfConfig":"30"},{"size":1011,"mtime":1624822118680,"results":"31","hashOfConfig":"30"},{"size":7623,"mtime":1624822400411,"results":"32","hashOfConfig":"30"},{"size":16336,"mtime":1624821821571,"results":"33","hashOfConfig":"30"},{"size":151,"mtime":1613594659545,"results":"34","hashOfConfig":"30"},{"size":6542,"mtime":1624377130793,"results":"35","hashOfConfig":"30"},{"size":2410,"mtime":1624977749996,"results":"36","hashOfConfig":"30"},{"size":2745,"mtime":1624981567244,"results":"37","hashOfConfig":"30"},{"size":1580,"mtime":1624917341307,"results":"38","hashOfConfig":"30"},{"size":9070,"mtime":1624729093336,"results":"39","hashOfConfig":"30"},{"size":1842,"mtime":1624979456623,"results":"40","hashOfConfig":"30"},{"size":379,"mtime":1610990355463,"results":"41","hashOfConfig":"30"},{"size":1728,"mtime":1624822090511,"results":"42","hashOfConfig":"30"},{"size":9462,"mtime":1624822206020,"results":"43","hashOfConfig":"30"},{"size":2118,"mtime":1624730765363,"results":"44","hashOfConfig":"30"},{"size":353,"mtime":1624980098523,"results":"45","hashOfConfig":"30"},{"size":7368,"mtime":1624981690819,"results":"46","hashOfConfig":"30"},{"size":262,"mtime":1624822528307,"results":"47","hashOfConfig":"30"},{"size":270,"mtime":1612804510912,"results":"48","hashOfConfig":"30"},{"size":1609,"mtime":1624917602203,"results":"49","hashOfConfig":"30"},{"size":6612,"mtime":1624822278125,"results":"50","hashOfConfig":"30"},{"size":2953,"mtime":1624730667023,"results":"51","hashOfConfig":"30"},{"size":21896,"mtime":1624822051707,"results":"52","hashOfConfig":"30"},{"size":2463,"mtime":1624917955693,"results":"53","hashOfConfig":"30"},{"size":7518,"mtime":1624916558290,"results":"54","hashOfConfig":"30"},{"size":137,"mtime":1624822475191,"results":"55","hashOfConfig":"30"},{"size":3005,"mtime":1624822505681,"results":"56","hashOfConfig":"30"},{"size":2375,"mtime":1624980911881,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"593dbw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\index.js",[],["123","124"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Tournament.js",["125"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, \r\n    Modal, \r\n    ModalHeader\r\n} from 'reactstrap'\r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\n\r\nconst Tournament = props => {\r\n    const [modal, setModal] = useState(false)\r\n    const toggle = () => setModal(!modal)\r\n    // const [games, setGames] = useState([])\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get(`/api/viewgames/${props.tournament.id}`)\r\n                .then(res => console.log(res))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={toggle}>\r\n                <p>{props.tournament.name}</p>\r\n                <p>{props.tournament.start_date}</p>\r\n                <p>{props.tournament.start_time}</p>\r\n                <p>{props.tournament.game}</p>\r\n            </Button>\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader>{props.tournament.name}</ModalHeader>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tournament","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\SignIn.js",["126"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login, register, clearError, fetchUserLikes } from '../../actions'\r\nimport Loader from 'react-loader-spinner'\r\nimport Posts from './Posts.js'\r\nimport { SignInput, RouteButton, RouteButtonDiv } from '../../styles/Sidebar'\r\n\r\nconst SignIn = props => {\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const [confirm, setConfirm] = useState({\r\n        password: ''\r\n    })\r\n    const [signup, setSignup] = useState(false)\r\n    const [length, setLength] = useState(false)\r\n    const [number, setNumber] = useState(false)\r\n    const [special, setSpecial] = useState(false)\r\n    const [letter, setLetter] = useState(false)\r\n    const [actLen, setActLen] = useState(0)\r\n    const [unmatching, setUnmatching] = useState(true)\r\n\r\n    const numbers = ['1','2','3','4','5','6','7','8','9']\r\n    const specialCharacters = ['[','#','?','!','@','$','%','^','&','-',']']\r\n    const letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\r\n\r\n    const handleChanges = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChangesconfirm = e => {\r\n        setConfirm({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault()\r\n\r\n        signup ? props.login(user) : props.register(user)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (actLen > user.password.length && number === true && special === true) {\r\n            setNumber(false)\r\n            setSpecial(false)\r\n            setLetter(false)\r\n        } \r\n        setActLen(user.password.length)\r\n\r\n        if (user.password.length > 7) {\r\n            setLength(true)\r\n        } else {\r\n            setLength(false)\r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (letters.includes(user.password[i])) {\r\n                setLetter(true)\r\n            } else if (((i+1) === user.password.length) && letter === false){\r\n                setLetter(false)\r\n            } \r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (numbers.includes(user.password[i])) {\r\n                setNumber(true)\r\n            } else if (((i+1) === user.password.length) && number === false){\r\n                setNumber(false)\r\n            } \r\n        }\r\n\r\n        for(let i=0; i<user.password.length; i++){\r\n            if (specialCharacters.includes(user.password[i])) {\r\n                setSpecial(true)\r\n            } else if (((i+1) === user.password.length) && special === false){\r\n                setSpecial(false)\r\n            } \r\n        }\r\n        if (!signup && user.password === confirm.password && user.password.length > 0) {\r\n            setUnmatching(true)\r\n        } else{\r\n            setUnmatching(false)\r\n        }\r\n    }, [user.password, confirm.password])\r\n\r\n    return (\r\n        <>\r\n            {localStorage.getItem('token') === null ?\r\n                <div className='signDiv'>\r\n                    <form onSubmit={submitForm}>\r\n                        <SignInput\r\n                            id='username'\r\n                            type='text'\r\n                            name='username'\r\n                            onChange={handleChanges}\r\n                            value={user.username}\r\n                            placeholder='Username'\r\n                        />\r\n                        <SignInput \r\n                            id='password'\r\n                            type='password'\r\n                            name='password'\r\n                            onChange={handleChanges}\r\n                            value={user.password}\r\n                            placeholder='Password'\r\n                        />\r\n                        {signup ?\r\n                            <div><button class=\"button type3\">Login</button></div> :\r\n                            <>\r\n                                <SignInput \r\n                                    className='signin'\r\n                                    id='password'\r\n                                    type='password'\r\n                                    name='password'\r\n                                    onChange={handleChangesconfirm}\r\n                                    value={confirm.password}\r\n                                    placeholder='Confirm Password'\r\n                                />\r\n                                {unmatching && length && number && special && letter ?\r\n                                    <div><button class=\"button type3\">Sign Up</button></div> :\r\n                                    <p className='red'>Requirements not met</p>\r\n                                }\r\n                            </> \r\n                        }\r\n                        {length ?\r\n                            <p className='green'>Meets length requirement (8 char+)</p> : \r\n                            <p className='red'>Must be longer than 8 characters</p>\r\n                        }\r\n                        {number ?\r\n                            <p className='green'>Has at least 1 number</p> : \r\n                            <p className='red'>Must have at least one number</p>\r\n                        }\r\n                        {special ?\r\n                            <p className='green'>Has at least 1 special character</p> : \r\n                            <p className='red'>Must have at least one special character [#?!@$%^&-]</p>\r\n                        }\r\n                        {letter ?\r\n                            <p className='green'>Has at least 1 letter</p> : \r\n                            <p className='red'>Must have at least one letter</p>\r\n                        }\r\n                        {!signup ?\r\n                            unmatching ?\r\n                                <p className='green'>passwords match</p> : \r\n                                <p className='red'>passwords do not match</p> :\r\n                            ''\r\n                        }\r\n                        {props.error != null ? \r\n                            !signup ?\r\n                                <p className='red'>Username may be taken</p> :\r\n                                <p className='red'>Username or Password may be incorrect</p>\r\n                            :\r\n                            ''\r\n                        }\r\n                    </form>\r\n                    {signup ? \r\n                        <RouteButtonDiv>\r\n                            <RouteButton className='nav' onClick={() => setSignup(!signup)}>Create Account</RouteButton>\r\n                        </RouteButtonDiv> :\r\n                        <RouteButtonDiv>\r\n                            <RouteButton className='nav' onClick={() => setSignup(!signup)}>Already have an Account</RouteButton>\r\n                        </RouteButtonDiv>\r\n                    }\r\n                    {\r\n                        props.isLoading ? \r\n                        <Loader type='Bars' /> :\r\n                        ''\r\n                    }\r\n                </div> :\r\n                <Posts />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // friends: state.friends,\r\n        // users: state.users,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, register, clearError, fetchUserLikes })(SignIn)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\actions\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\index.js",[],["127","128"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Header\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Welcome\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Players\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Sidebar\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Details.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\App.js",["129"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\sidebar\\Selector.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\LoadComments.js",["130","131","132","133","134","135","136","137","138"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, \r\n    Modal, \r\n    ModalHeader, \r\n    ModalBody, \r\n    ModalFooter,\r\n    DropdownItem\r\n} from 'reactstrap'\r\nimport { \r\n    addLike, \r\n    removeLike,\r\n    addLike1, \r\n    removeLike1,\r\n    deletePost,\r\n    addComment,\r\n    addComment1,\r\n    removeComment,\r\n    removeComment1\r\n} from '../../actions'\r\nimport { connect } from 'react-redux'\r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport Close from '../../styles/imgs/close.svg'\r\nimport Delete from '../../styles/imgs/delete.svg'\r\nimport Check from '../../styles/imgs/check.svg'\r\nimport ListLikes from './ListLikes'\r\n\r\nimport { Post, PostContainer, Header, PostBody, PostDeets, Clip, CloseHelper, Unlike, Like, CommentSection, SidebarPostPost } from '../../styles/Social'\r\n\r\nconst LoadComments = props => {\r\n    const [current, setCurrent] = useState({})\r\n    const [comments, setComments] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [modald, setModald] = useState(false)\r\n    const toggled = () => setModald(!modald)\r\n    const toggle = () => setModal(!modal)\r\n    const likedPostId = []\r\n\r\n    const [newComment, setNewComment] = useState({\r\n        comment: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get(`/api/posts/${props.post.id}/post`)\r\n                .then(res => {\r\n                    setCurrent(res.data)\r\n                    axiosWithAuth2()\r\n                        .get(`/api/comments/${props.post.id}/post`)\r\n                            .then(success => setComments(success.data))\r\n                            .catch(err => console.log(err))\r\n                })\r\n                .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    props.userLikes.forEach(likedposts => {\r\n        likedPostId.push(likedposts.post_id)\r\n    })\r\n\r\n    const handleChanges = e => {\r\n        setNewComment({\r\n            ...newComment,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitComment = e => {\r\n        e.preventDefault()\r\n        props.addComment1({ comment: newComment.comment, comment_username: localStorage.getItem('name'), user_id: localStorage.getItem('cred') }, current.id)\r\n        setComments([\r\n            ...comments, { comment: newComment.comment, comment_username: localStorage.getItem('name'), id: Date.now(), user_id: localStorage.getItem('cred'), is_player: props.user.is_player }])\r\n        setNewComment({ comment: '' })\r\n        setCurrent({ ...current, comment_number: current.comment_number+1 })\r\n    }\r\n\r\n    const removeCommentHelper = comment_id => {\r\n        props.removeComment1(comment_id, current.id)\r\n        const newarr = comments.filter(comm => comment_id !== comm.id)\r\n        setComments(newarr)\r\n        setCurrent({ ...current, comment_number: current.comment_number-1 })\r\n    }\r\n\r\n    const addLikeHelper = post_id => {\r\n        props.addLike1(localStorage.getItem('name'), localStorage.getItem('cred'), post_id)\r\n        likedPostId.push(post_id)\r\n        setCurrent({ ...current, like_number: current.like_number+1 })\r\n    }\r\n\r\n    const removeLikeHelper = post_id => {\r\n        props.removeLike1(localStorage.getItem('name'), localStorage.getItem('cred'), post_id)\r\n        likedPostId.filter(like => post_id !== like)\r\n        setCurrent({ ...current, like_number: current.like_number-1 })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.sidebar ?\r\n                <CommentSection onClick={toggle}>\r\n                    <SidebarPostPost className='showpost code'>{props.post.post}</SidebarPostPost>\r\n                    {props.post.img !== '' ?\r\n                        <Clip>\r\n                            <iframe width=\"500\" height=\"auto\" className='postimage2'\r\n                                src={`${props.post.img}?autoplay=1&mute=1&loop=1`}>\r\n                            </iframe>\r\n                        </Clip> : ''\r\n                    }\r\n                </CommentSection> :\r\n                <Button color=\"danger\" onClick={toggle}>Load Comments... [{current.comment_number}]</Button>\r\n            }\r\n            \r\n            <Post isOpen={modal} toggle={toggle}>\r\n                <PostContainer key={current.id} className='explore'>\r\n                    <Header>\r\n                        <PostDeets>\r\n                            <p className='playerusername code'>{props.username}</p>\r\n                            <p className='date code'>{current.created_at}</p>\r\n                            <CloseHelper onClick={toggle}><img src={Close} /></CloseHelper>\r\n                        </PostDeets>\r\n                        <PostBody className='showpost code'>{current.post}</PostBody>\r\n                        {current.img !== '' ? \r\n                            <Clip>\r\n                                <iframe width=\"500\" height=\"250\" className='postimage2'\r\n                                    src={`${props.post.img}?autoplay=1&mute=1&loop=1`}>\r\n                                </iframe>\r\n                            </Clip> :\r\n                            ''\r\n                        }\r\n                        <ListLikes post={current} />\r\n                        {current.user_id === localStorage.getItem('cred') ?\r\n                            <>\r\n                                <DropdownItem onClick={toggled}><img src={Delete} /></DropdownItem>\r\n                                <Modal isOpen={modald} toggle={toggled}>\r\n                                    <ModalHeader toggle={toggled}>Are you sure?</ModalHeader>\r\n                                    <ModalBody>\r\n                                        <DropdownItem color='danger' onClick={() => props.deletePost(localStorage.getItem('cred'), {postid: current.id})}><img src={Check} /></DropdownItem>\r\n                                        <DropdownItem color='primary' onClick={toggled}><img src={Close} /></DropdownItem>\r\n                                    </ModalBody>\r\n                                </Modal>\r\n                            </> :\r\n                            ''\r\n                        }\r\n                        {!likedPostId.includes(current.id) ? \r\n                            <Like onClick={() => addLikeHelper(current.id)}>Like</Like> :\r\n                            <Unlike onClick={() => removeLikeHelper(current.id)}>Unlike</Unlike>\r\n                        }\r\n\r\n                    </Header>\r\n                        <ModalBody>\r\n                            {comments.map(comment => (\r\n                                <>\r\n                                    {comment.is_player ?\r\n                                        <div key={comment.id} className='comment'>\r\n                                            <Link\r\n                                                to={`/player/${comment.comment_username}`}\r\n                                            >\r\n                                                <p id='playerusername'>{comment.comment_username}</p>\r\n                                            </Link>\r\n                                            <p>{comment.comment}</p>\r\n                                            {comment.comment_username === props.user.username ? \r\n                                                <img src={Close} onClick={() => removeCommentHelper(comment.id)} /> :\r\n                                                ''\r\n                                            }\r\n                                        </div> :\r\n                                        <div className='comment' key={comment.id}>\r\n                                            <p id='username'>{comment.comment_username}</p>\r\n                                            <p>{comment.comment}</p>\r\n                                            {comment.comment_username === props.user.username ? \r\n                                                <img src={Close} onClick={() => removeCommentHelper(comment.id)} /> :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            ))}\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <form onSubmit={submitComment} className='commentcomment'>\r\n                                <textarea\r\n                                    className='commentcomment'\r\n                                    id='comment'\r\n                                    name='comment'\r\n                                    value={newComment.comment}\r\n                                    placeholder='Comment on post'\r\n                                    onChange={handleChanges}\r\n                                />\r\n                                <Clip><button type='submit' className='button type3'>Post Comment</button></Clip>\r\n                            </form>\r\n                        </ModalFooter>\r\n                    </PostContainer>\r\n            </Post>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        posts: state.posts,\r\n        userLikes: state.userLikes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, removeLike1, addLike1, addComment, addComment1, removeComment, removeComment1, deletePost })(LoadComments)",["139","140"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\ListLikes.js",["141"],"import React, { useState, useEffect } from 'react'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport { } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst ListLikes = props => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n    const [likes, setLikes] = useState([])\r\n    const toggle = () => setDropdownOpen(prevState => !prevState)\r\n    const players = ['Tryhard', 'Othos']\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get(`/api/likes/${props.post.id}/post`)\r\n                .then(res => {\r\n                    setLikes(res.data)\r\n                })\r\n    },[])\r\n\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} id='listlikes'>\r\n            <DropdownToggle id='listlikes' className='listlikes2 code'>\r\n                Likes: {props.post.like_number}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n                <DropdownItem header>Likes</DropdownItem>\r\n                <DropdownItem divider />\r\n                {likes.map(user => (\r\n                    <>\r\n                        {players.includes(user.like_username)  ?\r\n                            <DropdownItem><Link \r\n                                to={`/player/${user.like_username}`}\r\n                                id='playerusername'\r\n                                key={user.id}\r\n                                className='likename'>\r\n                                    {user.like_username}\r\n                            </Link></DropdownItem> :\r\n                            <DropdownItem id='username'><p>{user.like_username}</p></DropdownItem>\r\n                        }\r\n                    </>\r\n                ))}\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { })(ListLikes)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Store\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Header.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\App\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\utils\\axiosWithAuth2.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Welcome.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\social\\Posts.js",["142","143","144","145"],"import React, { useState, useEffect } from 'react' \r\nimport axiosWithAuth2 from '../../utils/axiosWithAuth2'\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchUserLikes, clearError, fetchUser, postPost, deletePost } from '../../actions'\r\nimport LoadComments from './LoadComments.js'\r\nimport { connect } from 'react-redux'\r\nimport ListLikes from './ListLikes.js'\r\n\r\nimport { SidebarPost, PostButton } from '../../styles/Social'\r\n\r\nconst Posts = props => {\r\n    const [allposts, setAllposts] = useState([])\r\n    const [postpost, setPostpost] = useState(false)\r\n    const [img, setImg] = useState(false)\r\n    // const [modal, setModal] = useState(false)\r\n    // const toggle = () => setModal(!modal)\r\n    const [newPost, setNewPost] = useState({\r\n        post: '',\r\n        location: '',\r\n        img: ''\r\n    })\r\n    var d = new Date()\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth2()\r\n            .get('/api/posts')\r\n                .then(res => {\r\n                    setAllposts(res.data)\r\n                    console.log('------TYLER LENGTH HERE------', res.data.length)\r\n                })\r\n                .catch(err => {\r\n                    localStorage.removeItem('token')\r\n                    localStorage.removeItem('cred')\r\n                    localStorage.removeItem('name')\r\n                    props.clearError()\r\n                })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null){\r\n            props.fetchUser(localStorage.getItem('cred'))\r\n            props.fetchUserLikes(localStorage.getItem('cred'))\r\n        }\r\n    }, [])\r\n\r\n    const handleChanges = e => {\r\n        setNewPost({\r\n            ...newPost,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n//year month day hour minute\r\n    const submitForm = e => {\r\n        e.preventDefault()\r\n        props.postPost(props.user.id, {...newPost, user_id: props.user.id})\r\n        setAllposts([\r\n            { post: newPost.post, id: allposts.length+1, created_at: `${d.getFullYear()}-${d.getMonth()}-${d.getDate()}T${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}.${d.getMilliseconds()}Z`, username: props.user.username, is_player: props.user.is_player }, ...allposts\r\n        ])\r\n        setNewPost({ post: ''})\r\n        setPostpost(false)\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('cred')\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('name')\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img src=\"https://img.icons8.com/dusk/64/000000/exit.png\" className='logoutbutton' onClick={() => logout()}/>\r\n            {props.user.is_player || props.user.team === 'admin' ? \r\n                <PostButton onClick={() => setPostpost(!postpost)}>Post</PostButton> :\r\n                ''\r\n            }\r\n            {postpost ? \r\n                <form onSubmit={submitForm} className='postform'>\r\n                    <textarea\r\n                        id='post'\r\n                        name='post'\r\n                        value={newPost.post}\r\n                        placeholder=\"What's on your mind?\"\r\n                        onChange={handleChanges}\r\n                        className='postpost'\r\n                    />\r\n                    {/* {!location ? \r\n                        <p onClick={() => setLocation(!img)}>Location</p> :\r\n                        <>\r\n                            <input\r\n                                className='locationlocation'\r\n                                id='location'\r\n                                type='text'\r\n                                name='location'\r\n                                value={newPost.location}\r\n                                placeholder='Location'\r\n                                onChange={handleChanges}\r\n                            />\r\n                            <button onClick={() => setLocation(!location)}>Cancel</button>\r\n                        </>\r\n                    }\r\n                    */}\r\n                    {!img ? \r\n                        <p onClick={() => setImg(!img)}>Embedded Ytlink</p> :\r\n                        <>\r\n                            <input\r\n                                className='locationlocation'\r\n                                id='img'\r\n                                type='text'\r\n                                name='img'\r\n                                value={newPost.img}\r\n                                placeholder='YT embedded link'\r\n                                onChange={handleChanges}\r\n                            />\r\n                            {newPost.img !== '' ?\r\n                                <>\r\n                                    <iframe width=\"500\" height=\"250\" className='video'\r\n                            src={`${newPost.img}?autoplay=1&mute=1&loop=1`}>\r\n                        </iframe>\r\n                                </> :\r\n                                ''\r\n                            }\r\n                            <button onClick={() => setImg(!img)}>Cancel</button>\r\n                        </>\r\n                    } \r\n                    <button type='submit'>Post</button>\r\n                </form> :\r\n                ''\r\n            }\r\n            {allposts.map(post => (\r\n                <SidebarPost key={post.id}>\r\n                    <div className='postssidebar'>\r\n                        {post.is_player ?\r\n                            <Link to={`/player/${post.username}`} className='postlink'>\r\n                                <p className='playerusername code'>{post.username}</p>\r\n                                <p className='date code'>{post.created_at}</p>\r\n                            </Link> :\r\n                            <div className='postlink'>\r\n                                <p className='username code'>{post.username}</p>\r\n                                <p className='date code'>{post.created_at}</p>\r\n                            </div>\r\n                        }\r\n                        \r\n                        <LoadComments post={post} sidebar={true} username={post.username}/>\r\n                        <ListLikes post={post} /> \r\n                    </div>\r\n                </SidebarPost> \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        // friends: state.friends,\r\n        // users: state.users,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchUserLikes, clearError, fetchUser, postPost, deletePost })(Posts)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\Social\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\Player.js",["146","147","148","149","150"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport Twitch from '../styles/imgs/icons8-twitch-64.png'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { addAgent, deleteAgent, addYtlink, deleteYtlink, addCreator, deleteCreator, addOthergame, deleteOthergame, editUser } from '../actions'\r\n\r\nimport Raze from '../styles/imgs/raze.png'\r\nimport Yoru from '../styles/imgs/yoru.png'\r\nimport Cypher from '../styles/imgs/cypher.png'\r\nimport Viper from '../styles/imgs/viper.png'\r\nimport Breach from '../styles/imgs/breach.png'\r\nimport Pheonix from '../styles/imgs/pheonix.png'\r\nimport Jett from '../styles/imgs/jett.png'\r\nimport Reyna from '../styles/imgs/reyna.png'\r\nimport Sova from '../styles/imgs/sova.png'\r\nimport Killjoy from '../styles/imgs/killjoy.png'\r\nimport Omen from '../styles/imgs/omen.PNG'\r\nimport Sage from '../styles/imgs/sage.png'\r\nimport Skye from '../styles/imgs/skye.png'\r\nimport Brimstone from '../styles/imgs/brimstone.png'\r\n\r\nimport Dia1 from '../styles/imgs/dia2.png'\r\nimport Dia2 from '../styles/imgs/dia2.png'\r\nimport Dia3 from '../styles/imgs/dia3.png'\r\nimport Imm3 from '../styles/imgs/imm3.png'\r\nimport Rad from '../styles/imgs/radiant.png'\r\n//add rl ranks\r\nimport C1 from '../styles/imgs/c1.png'\r\nimport C2 from '../styles/imgs/c2.png'\r\nimport C3 from '../styles/imgs/c3.png'\r\nimport GC1 from '../styles/imgs/gc1.png'\r\nimport GC2 from '../styles/imgs/gc2.png'\r\nimport GC3 from '../styles/imgs/gc3.png'\r\nimport SSL from '../styles/imgs/ssl.png'\r\n\r\nimport { PlayerDiv, PlayerDeets, Clips, PlayerHead, Username, Imp } from '../styles/Players'\r\n\r\nconst Player = props => {\r\n    const { name } = useParams()\r\n    const [player, setPlayer] = useState({})\r\n    const [details, setDetails] = useState({})\r\n    const [agents, setAgents] = useState([])\r\n    const [creators, setCreators] = useState([])\r\n    const [othergames, setOthergames] = useState([])\r\n    const [ytlinks, setYtlinks] = useState([])\r\n    const [carpics, setCarpics] = useState([])\r\n\r\n    const [ytformdis, setYtformdis] = useState(false)\r\n    const [ytform, setYtform] = useState({ youtubelinks: '' })\r\n    const [agentformdis, setAgentformdis] = useState(false)\r\n    const [agentform, setAgentform] = useState({ agent_name: '' })\r\n    const [othergameformdis, setOthergameformdis] = useState(false)\r\n    const [othergameform, setOthergameform] = useState({ name: '', img_link: '' })\r\n    const [creatorformdis, setCreatorformdis] = useState(false)\r\n    const [creatorform, setCreatorform] = useState({ name: '', img: '', link: '' })\r\n    // const [editformdis, setEditformdis] = useState(false)\r\n    // const [editform, setEditform] = useState({ rank: '' })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://hdsocial.herokuapp.com/api/viewuser/${name}/username`)\r\n            .then(res => {\r\n                setPlayer(res.data[0])\r\n                if (res.data[0].game === 'valorant') {\r\n                    axios.get(`https://hdsocial.herokuapp.com/api/viewuser/${res.data[0].id}/details/valorant`)\r\n                        .then(res2 => {\r\n                            setDetails(res2.data.user_details)\r\n                            setAgents(res2.data.user_agents)\r\n                            setCreators(res2.data.user_creators)\r\n                            setOthergames(res2.data.user_othergames)\r\n                            setYtlinks(res2.data.user_ytlinks)\r\n                        })\r\n                } else if (res.data[0].game === 'rl') {\r\n                    axios.get(`https://hdsocial.herokuapp.com/api/viewuser/${res.data[0].id}/details/rl`)\r\n                        .then(res2 => {\r\n                            setDetails(res2.data.user_details)\r\n                            setCarpics(res2.data.user_carpics)\r\n                            setCreators(res2.data.user_creators)\r\n                            setOthergames(res2.data.user_othergames)\r\n                            setYtlinks(res2.data.user_ytlinks)\r\n                            console.log(details)\r\n                        })\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const redirectFunc = link => {\r\n        const win = window.open(link, '_blank')\r\n        win.focus()\r\n    }\r\n\r\n    const handleChangesyt = e => {\r\n        setYtform({\r\n            ...ytform,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitYt = e => {\r\n        e.preventDefault()\r\n        setYtlinks([...ytlinks, { ...ytform } ])\r\n        props.addYtlink({ ...ytform, user_id: props.user.id }, props.user.id)\r\n        setYtform({ youtubelinks: '' })\r\n        setYtformdis(false)\r\n    }\r\n\r\n    const handleChangesagent = e => {\r\n        setAgentform({\r\n            ...agentform,\r\n            [e.target.name]: e.target.value.toLowerCase()\r\n        })\r\n    }\r\n\r\n    const submitAgent = e => {\r\n        e.preventDefault()\r\n        setAgents([...agents, { ...agentform, id: agents.length+1 } ])\r\n        props.addAgent({ ...agentform, user_id: props.user.id }, props.user.id)\r\n        setAgentform({ agent_name: '' })\r\n        setAgentformdis(false)\r\n    }\r\n\r\n    const handleChangesothergame = e => {\r\n        setOthergameform({\r\n            ...othergameform,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitOthergame = e => {\r\n        e.preventDefault()\r\n        setOthergames([...othergames, { ...othergameform, id: othergames.length+1 } ])\r\n        props.addOthergame({ ...othergameform, user_id: props.user.id }, props.user.id)\r\n        setOthergameform({ name: '', img_link: '' })\r\n        setOthergameformdis(false)\r\n    }\r\n\r\n    const handleChangescreator = e => {\r\n        setCreatorform({\r\n            ...creatorform,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitCreator = e => {\r\n        e.preventDefault()\r\n        setCreators([...creators, { ...creatorform, id: creators.length+1 }])\r\n        props.addCreator({ ...creatorform, user_id: props.user.id }, props.user.id)\r\n        setCreatorform({ name: '', img: '' })\r\n        setCreatorformdis(false)\r\n    }\r\n\r\n    // const handleChangesEdit = e => {\r\n    //     setEditform({\r\n    //         ...editform,\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // const submitEdit = e => {\r\n    //     e.preventDefault()\r\n    //     props.editUser(editform, props.user.id)\r\n    //     setEditformdis(!editformdis)\r\n    //     setEditform({ rank: '' })\r\n    // }\r\n\r\n    const deleteDetail = (type, id) => {\r\n        if (type === 'youtube') {\r\n            const newarr = ytlinks.filter(ytlink => id !== ytlink.id)\r\n            props.deleteYtlink(id)\r\n            setYtlinks(newarr)\r\n        } else if (type === 'agent') {\r\n            const newarr = agents.filter(agent => id !== agent.id)\r\n            props.deleteAgent(id)\r\n            setAgents(newarr)\r\n        } else if (type === 'othergame') {\r\n            const newarr = othergames.filter(othergame => id !== othergame.id)\r\n            props.deleteOthergame(id)\r\n            setOthergames(newarr)\r\n        } else {\r\n            const newarr = creators.filter(creator => id !== creator.id)\r\n            props.deleteCreator(id)\r\n            setCreators(newarr)\r\n        }\r\n    }\r\n\r\n    const [ytplay, setYtplay] = useState(0)\r\n\r\n    const rankJSX = () => {\r\n        switch (player.game) {\r\n            case 'valorant' :\r\n                switch (details.rank) {\r\n                    case 'dia1' :\r\n                        return <img src={Dia1} className='twitch' alt={`rank ${details.rank}`} /> \r\n                    case 'dia2' :\r\n                        return <img src={Dia2} className='twitch' alt={`rank ${details.rank}`} /> \r\n                    case 'dia3' :\r\n                        return <img src={Dia3} className='twitch' alt={`rank ${details.rank}`} /> \r\n                    case 'imm' :\r\n                        return <img src={Imm3} className='twitch' alt={`rank ${details.rank}`} />\r\n                    case 'rad' :\r\n                        return <img src={Rad} className='twitch' alt={`rank ${details.rank}`} />\r\n                    default :\r\n                        return \r\n                }\r\n            case 'rl' :\r\n                switch (details.rank) {\r\n                case 'c1' :\r\n                    return <img src={C1} className='twitch' alt={`rank ${details.rank}`} /> \r\n                case 'c2' :\r\n                    return <img src={C2} className='twitch' alt={`rank ${details.rank}`} />\r\n                case 'c3' :\r\n                    return <img src={C3} className='twitch' alt={`rank ${details.rank}`} />\r\n                case 'gc1' :\r\n                    return <img src={GC1} className='twitch' alt={`rank ${details.rank}`} /> \r\n                case 'gc2' :\r\n                    return <img src={GC2} className='twitch' alt={`rank ${details.rank}`} /> \r\n                case 'gc3' :\r\n                    return <img src={GC3} className='twitch' alt={`rank ${details.rank}`} /> \r\n                case 'ssl' :\r\n                    return <img src={SSL} className='twitch' alt={`rank ${details.rank}`} /> \r\n                default :\r\n                    return \r\n                }\r\n            default :\r\n                return \r\n        }\r\n    }\r\n\r\n    const agentORCarJSX = agent => {\r\n        switch (player.game) {\r\n            case 'valorant' :\r\n                switch (agent.name) {\r\n                    case 'raze' :\r\n                        return <img src={Raze} alt={`${agent.agent_name}`} className='agents'/> \r\n                    case 'omen' :\r\n                        return <img src={Omen} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'brimstone' :\r\n                        return <img src={Brimstone} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'breach' :\r\n                        return <img src={Breach} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'viper' :\r\n                        return <img src={Viper} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'killjoy' :\r\n                        return <img src={Killjoy} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'cypher' :\r\n                        return <img src={Cypher} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'yoru' :\r\n                        return <img src={Yoru} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'sova' :\r\n                        return <img src={Sova} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'reyna' :\r\n                        return <img src={Reyna} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'pheonix' :\r\n                        return <img src={Pheonix} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'jett' :\r\n                        return <img src={Jett} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'sage' : \r\n                        return <img src={Sage} alt={`${agent.agent_name}`} className='agents' /> \r\n                    case 'skye' :\r\n                        return <img src={Skye} alt={`${agent.agent_name}`} className='agents' /> \r\n                    default :\r\n                        return \r\n                }\r\n            default :\r\n                return \r\n        }\r\n    }\r\n\r\n    return (\r\n        <PlayerDiv>\r\n            <PlayerHead>\r\n                <Username className='spiffy'>{player.username}</Username>\r\n                {details ? \r\n                    <Imp>\r\n                        {details.twitch_link !== null ?\r\n                            <img src={Twitch} alt='twitch logo' className='twitch' onClick={() => redirectFunc(details.twitch_link)} /> :\r\n                            ''\r\n                        }\r\n                        {details.youtube_link !== null ?\r\n                            <img className='youtube' alt='youtube logo' onClick={() => redirectFunc(details.youtube_link)} src=\"https://img.icons8.com/dusk/64/000000/youtube--v2.png\"/> :\r\n                            ''\r\n                        }\r\n                        {rankJSX()}\r\n                    </Imp> :\r\n                    <p>No details to display :/</p>\r\n                }\r\n            </PlayerHead>\r\n            <PlayerDeets>\r\n                {ytlinks.length > 0 ? \r\n                    <Clips>\r\n                        <iframe width=\"500\" height=\"250\" className='video'\r\n                            src={`${ytlinks[ytplay].youtubelinks}?autoplay=1&mute=1&loop=1`}>\r\n                        </iframe>\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => deleteDetail('youtube', ytlinks[ytplay].id)}>delete</button> :\r\n                            ''\r\n                        }\r\n                    </Clips> : \r\n                    <p>No vidoes listed</p>\r\n                }\r\n                {props.user.username === name ?\r\n                    <button onClick={() => setYtformdis(!ytformdis)}>Add youtube links</button> :\r\n                    ''\r\n                }\r\n                {ytformdis ?\r\n                    <form onSubmit={submitYt}>\r\n                        <input  \r\n                            type='text'\r\n                            id='youtubelinks'\r\n                            name='youtubelinks'\r\n                            onChange={handleChangesyt}\r\n                            placeholder='Embedded youtube link'\r\n                            className='input'\r\n                        />\r\n                        <button type='submit'>send</button>\r\n                    </form> : \r\n                    ''\r\n                }\r\n                <div>\r\n                    {/* <div className='maindetails'> */}\r\n                        {player.game === 'valorant' ?\r\n                            <>\r\n                                <h1 className='detailtitle'>Agents</h1>\r\n                                {agents.length > 0 ? \r\n                                    <div className='agentflex'>\r\n                                        {agents.map(agent => (\r\n                                            <div className='agentflex2' key={agent.id}>\r\n                                                {agentORCarJSX(agent)}\r\n                                                {props.user.username === name ?\r\n                                                    <button onClick={() => deleteDetail('agent', agent.id)}>delete</button> :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n                                        )) }\r\n                                    </div> : \r\n                                    <p>No agents listed</p>\r\n                                }\r\n                                {props.user.username === name ?\r\n                                    <button className={agentformdis ? '' : 'agentbutton'} onClick={() => setAgentformdis(!agentformdis)}>Add agents</button> :\r\n                                    ''\r\n                                }\r\n                                {agentformdis ?\r\n                                    <form onSubmit={submitAgent}>\r\n                                        <input  \r\n                                            type='text'\r\n                                            id='agent_name'\r\n                                            name='agent_name'\r\n                                            onChange={handleChangesagent}\r\n                                            placeholder='Agent name'\r\n                                            className='input'\r\n                                        />\r\n                                        <button type='submit'>send</button>\r\n                                    </form> : \r\n                                    ''\r\n                                }\r\n                            </> : \r\n                            <>\r\n                                {/* RL car pic stuff here!!! */}\r\n                            </>\r\n                        }\r\n                    {/* </div> */}\r\n                    <div className='maindetails2'>\r\n                        <h1 className='detailtitle'>Other Games</h1>\r\n                        {othergames.length > 0 ? \r\n                            <div className='agentflex'>\r\n                                {othergames.map(game => (\r\n                                    <div className='agentflex2' key={game.id}>\r\n                                        <img src={game.img_link} alt={`${game.name}`} className='agents' />\r\n                                        {/* <p>{game.name}</p> */}\r\n                                        {props.user.username === name ?\r\n                                            <button onClick={() => deleteDetail('othergame', game.id)}>delete</button> :\r\n                                            ''\r\n                                        }\r\n                                    </div>\r\n                                ))} \r\n                            </div> :\r\n                            <p>No games listed</p>\r\n                        }\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => setOthergameformdis(!othergameformdis)}>Add games</button> :\r\n                            ''\r\n                        }\r\n                        {othergameformdis ?\r\n                            <form onSubmit={submitOthergame}>\r\n                                <input  \r\n                                    type='text'\r\n                                    id='name'\r\n                                    name='name'\r\n                                    onChange={handleChangesothergame}\r\n                                    placeholder='Game name'\r\n                                    className='input'\r\n                                />\r\n                                <input  \r\n                                    type='text'\r\n                                    id='img_link'\r\n                                    name='img_link'\r\n                                    onChange={handleChangesothergame}\r\n                                    placeholder='Img address link (logo)'\r\n                                    className='input'\r\n                                />\r\n                                <button type='submit'>send</button>\r\n                            </form> : \r\n                            ''\r\n                        }\r\n                    </div>\r\n                    <div className='maindetails2'>\r\n                        <h1 className='detailtitle'>Favorite Content Creators</h1>\r\n                        {creators.length > 0 ?\r\n                            creators.map(creator => (\r\n                                <div className='maindetails2' key={creator.id}>\r\n                                    <img onClick={() => redirectFunc(creator.link)} alt={`${creator.name}`} src={creator.img} className='agents'/>\r\n                                    <p onClick={() => redirectFunc(creator.link)}>{creator.name}</p>\r\n                                    {props.user.username === name ?\r\n                                        <button onClick={() => deleteDetail('creator', creator.id)}>delete</button> :\r\n                                        ''\r\n                                    }\r\n                                </div>\r\n                            )) :\r\n                            <p> No favorite creators listed</p>\r\n                        }\r\n                        {props.user.username === name ?\r\n                            <button onClick={() => setCreatorformdis(!creatorformdis)}>Add creators</button> :\r\n                            ''\r\n                        }\r\n                        {creatorformdis ?\r\n                            <form onSubmit={submitCreator}>\r\n                                <input  \r\n                                    type='text'\r\n                                    id='name'\r\n                                    name='name'\r\n                                    onChange={handleChangescreator}\r\n                                    placeholder='Creator name'\r\n                                    className='input'\r\n                                />\r\n                                <input  \r\n                                    type='text'\r\n                                    id='img'\r\n                                    name='img'\r\n                                    onChange={handleChangescreator}\r\n                                    placeholder='Img address link (profile img)'\r\n                                    className='input'\r\n                                />\r\n                                <input  \r\n                                    type='text'\r\n                                    id='link'\r\n                                    name='link'\r\n                                    onChange={handleChangescreator}\r\n                                    placeholder='Link to creator'\r\n                                    className='input'\r\n                                />\r\n                                <button type='submit'>send</button>\r\n                            </form> : \r\n                            ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </PlayerDeets>\r\n        </PlayerDiv>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        user: state.user,\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addAgent, deleteAgent, addYtlink, deleteYtlink, addCreator, deleteCreator, addOthergame, deleteOthergame, editUser })(Player)","C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\styles\\About\\index.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\About.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\store\\EsportsGear.js",[],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\reducers\\index.js",["151"],"C:\\Users\\Tyler\\Desktop\\lambda\\tyler\\hd\\hyperspace-dark-fe\\src\\components\\RL.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":17,"column":8,"nodeType":"158","endLine":17,"endColumn":10,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":91,"column":8,"nodeType":"158","endLine":91,"endColumn":41,"suggestions":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":29,"column":6,"nodeType":"158","endLine":29,"endColumn":25,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"166","line":54,"column":8,"nodeType":"158","endLine":54,"endColumn":10,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":102,"column":29,"nodeType":"170","endLine":103,"endColumn":84},{"ruleId":"171","severity":1,"message":"172","line":117,"column":59,"nodeType":"170","endLine":117,"endColumn":78},{"ruleId":"168","severity":1,"message":"169","line":122,"column":33,"nodeType":"170","endLine":123,"endColumn":88},{"ruleId":"171","severity":1,"message":"172","line":131,"column":65,"nodeType":"170","endLine":131,"endColumn":85},{"ruleId":"171","severity":1,"message":"172","line":135,"column":155,"nodeType":"170","endLine":135,"endColumn":174},{"ruleId":"171","severity":1,"message":"172","line":136,"column":89,"nodeType":"170","endLine":136,"endColumn":108},{"ruleId":"171","severity":1,"message":"172","line":160,"column":49,"nodeType":"170","endLine":160,"endColumn":116},{"ruleId":"171","severity":1,"message":"172","line":168,"column":49,"nodeType":"170","endLine":168,"endColumn":116},{"ruleId":"152","replacedBy":"173"},{"ruleId":"154","replacedBy":"174"},{"ruleId":"156","severity":1,"message":"166","line":20,"column":7,"nodeType":"158","endLine":20,"endColumn":9,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"176","line":37,"column":8,"nodeType":"158","endLine":37,"endColumn":10,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"176","line":44,"column":8,"nodeType":"158","endLine":44,"endColumn":10,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"172","line":72,"column":13,"nodeType":"170","endLine":72,"endColumn":122},{"ruleId":"168","severity":1,"message":"169","line":117,"column":37,"nodeType":"170","endLine":118,"endColumn":77},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":21},{"ruleId":"179","severity":1,"message":"183","line":47,"column":12,"nodeType":"181","messageId":"182","endLine":47,"endColumn":19},{"ruleId":"156","severity":1,"message":"184","line":85,"column":8,"nodeType":"158","endLine":85,"endColumn":10,"suggestions":"185"},{"ruleId":"179","severity":1,"message":"186","line":186,"column":20,"nodeType":"181","messageId":"182","endLine":186,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":291,"column":25,"nodeType":"170","endLine":292,"endColumn":94},{"ruleId":"187","severity":1,"message":"188","line":91,"column":9,"nodeType":"189","messageId":"190","endLine":95,"endColumn":14},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tournament.id'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'actLen', 'letter', 'letters', 'number', 'numbers', 'signup', 'special', and 'specialCharacters'. Either include them or remove the dependency array.",["194"],["191"],["192"],"React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'props.post.id'. Either include it or remove the dependency array.",["196"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["191"],["192"],["197"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["198"],["199"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'carpics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'details' and 'name'. Either include them or remove the dependency array.",["200"],"'setYtplay' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [props.tournament.id]",{"range":"215","text":"216"},"Update the dependencies array to be: [user.password, confirm.password, actLen, number, special, signup, letters, letter, numbers, specialCharacters]",{"range":"217","text":"218"},"Update the dependencies array to be: [display, location.pathname]",{"range":"219","text":"220"},"Update the dependencies array to be: [props.post.id]",{"range":"221","text":"222"},{"range":"223","text":"222"},"Update the dependencies array to be: [props]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [details, name]",{"range":"227","text":"228"},[514,516],"[props.tournament.id]",[2992,3025],"[user.password, confirm.password, actLen, number, special, signup, letters, letter, numbers, specialCharacters]",[1067,1086],"[display, location.pathname]",[1774,1776],"[props.post.id]",[754,756],[1362,1364],"[props]",[1587,1589],[4130,4132],"[details, name]"]